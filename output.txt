#line 1 "sample.txt"
#line 8 "sample.txt"
int a =  ((3)*(5)) ;
#line 10 "sample.txt"
#line 1 "system.H"
#line 47 "system.H"
#line 1 "noconfig.H"
#line 576 "noconfig.H"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#line 12 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt.h"
#line 10 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt.h"
#line 1 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
#line 47 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
#line 1 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/sal.h"
#line 708 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/sal.h"
#pragma region Input Buffer SAL 1 compatibility macros
#line 1472 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/sal.h"
#pragma endregion Input Buffer SAL 1 compatibility macros
#line 2880 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/sal.h"

#line 2923 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/sal.h"

#line 2953 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/sal.h"


#line 2970 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/sal.h"
#line 1 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/concurrencysal.h"
#line 2971 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/sal.h"
#line 48 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
#line 1 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vadefs.h"
#line 15 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vadefs.h"
#pragma pack(push, _CRT_PACKING)
#line 28 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vadefs.h"
        typedef unsigned __int64 uintptr_t;
#line 39 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vadefs.h"
        typedef char* va_list;
#line 164 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vadefs.h"
#pragma pack(pop)
#line 49 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
#line 83 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
__pragma(pack(push, 8 ))
#line 180 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
    typedef unsigned __int64 size_t;
    typedef __int64 ptrdiff_t;
    typedef __int64 intptr_t;
#line 196 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
    typedef _Bool __vcrt_bool;
#line 215 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
    typedef unsigned short wchar_t;
#line 277 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime.h"
    void __cdecl __security_init_cookie(void);





        void __cdecl __security_check_cookie(  uintptr_t _StackCookie);
        __declspec(noreturn) void __cdecl __report_gsfailure(  uintptr_t _StackCookie);



extern uintptr_t __security_cookie;







__pragma(pack(pop))
#line 11 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt.h"

__pragma(pack(push, 8 ))
#line 145 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt.h"
    typedef _Bool __crt_bool;
#line 253 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt.h"
 void __cdecl _invalid_parameter_noinfo(void);
 __declspec(noreturn) void __cdecl _invalid_parameter_noinfo_noreturn(void);

__declspec(noreturn)
 void __cdecl _invoke_watson(
     wchar_t const* _Expression,
     wchar_t const* _FunctionName,
     wchar_t const* _FileName,
     unsigned int _LineNo,
     uintptr_t _Reserved);
#line 482 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt.h"
typedef int errno_t;
typedef unsigned short wint_t;
typedef unsigned short wctype_t;
typedef long __time32_t;
typedef __int64 __time64_t;

typedef struct __crt_locale_data_public
{
      unsigned short const* _locale_pctype;
     int _locale_mb_cur_max;
               unsigned int _locale_lc_codepage;
} __crt_locale_data_public;

typedef struct __crt_locale_pointers
{
    struct __crt_locale_data* locinfo;
    struct __crt_multibyte_data* mbcinfo;
} __crt_locale_pointers;

typedef __crt_locale_pointers* _locale_t;

typedef struct _Mbstatet
{
    unsigned long _Wchar;
    unsigned short _Byte, _State;
} _Mbstatet;

typedef _Mbstatet mbstate_t;
#line 523 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt.h"
        typedef __time64_t time_t;









    typedef size_t rsize_t;
#line 1982 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt.h"
__pragma(pack(pop))
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_stdio_config.h"
#line 12 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_stdio_config.h"
__pragma(pack(push, 8 ))
#line 83 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_stdio_config.h"

    __declspec(noinline) __inline unsigned __int64*  __cdecl  __local_stdio_printf_options(void)
    {
        static unsigned __int64 _OptionsStorage;
        return &_OptionsStorage;
    }




    __declspec(noinline) __inline unsigned __int64*  __cdecl  __local_stdio_scanf_options(void)
    {
        static unsigned __int64 _OptionsStorage;
        return &_OptionsStorage;
    }
#line 122 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_stdio_config.h"
__pragma(pack(pop))
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"

__pragma(pack(push, 8 ))









    typedef struct _iobuf
    {
        void* _Placeholder;
    } FILE;


 FILE* __cdecl __acrt_iob_func(unsigned _Ix);
#line 47 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"

     wint_t __cdecl fgetwc(
         FILE* _Stream
        );


     wint_t __cdecl _fgetwchar(void);


     wint_t __cdecl fputwc(
         wchar_t _Character,
         FILE* _Stream);


     wint_t __cdecl _fputwchar(
         wchar_t _Character
        );


     wint_t __cdecl getwc(
         FILE* _Stream
        );


     wint_t __cdecl getwchar(void);




     wchar_t* __cdecl fgetws(
         wchar_t* _Buffer,
         int _BufferCount,
         FILE* _Stream
        );


     int __cdecl fputws(
         wchar_t const* _Buffer,
         FILE* _Stream
        );



     wchar_t* __cdecl _getws_s(
         wchar_t* _Buffer,
         size_t _BufferCount
        );


#line 101 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"

     wint_t __cdecl putwc(
         wchar_t _Character,
         FILE* _Stream
        );


     wint_t __cdecl putwchar(
         wchar_t _Character
        );


     int __cdecl _putws(
         wchar_t const* _Buffer
        );


     wint_t __cdecl ungetwc(
         wint_t _Character,
         FILE* _Stream
        );


     FILE * __cdecl _wfdopen(
         int _FileHandle,
         wchar_t const* _Mode
        );

      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wfopen_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     FILE* __cdecl _wfopen(
         wchar_t const* _FileName,
         wchar_t const* _Mode
        );


     errno_t __cdecl _wfopen_s(
         FILE** _Stream,
         wchar_t const* _FileName,
         wchar_t const* _Mode
        );


    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wfreopen_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     FILE* __cdecl _wfreopen(
         wchar_t const* _FileName,
         wchar_t const* _Mode,
         FILE* _OldStream
        );


     errno_t __cdecl _wfreopen_s(
         FILE** _Stream,
         wchar_t const* _FileName,
         wchar_t const* _Mode,
         FILE* _OldStream
        );


     FILE* __cdecl _wfsopen(
         wchar_t const* _FileName,
         wchar_t const* _Mode,
         int _ShFlag
        );

     void __cdecl _wperror(
         wchar_t const* _ErrorMessage
        );




         FILE* __cdecl _wpopen(
             wchar_t const* _Command,
             wchar_t const* _Mode
            );



     int __cdecl _wremove(
         wchar_t const* _FileName
        );
#line 183 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma push_macro("_wtempnam")



       wchar_t* __cdecl _wtempnam(
         wchar_t const* _Directory,
         wchar_t const* _FilePrefix
        );
#line 192 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma pop_macro("_wtempnam")



     errno_t __cdecl _wtmpnam_s(
         wchar_t* _Buffer,
         size_t _BufferCount
        );


#line 207 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wtmpnam_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wtmpnam( wchar_t *_Buffer);
#line 220 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"

     wint_t __cdecl _fgetwc_nolock(
         FILE* _Stream
        );


     wint_t __cdecl _fputwc_nolock(
         wchar_t _Character,
         FILE* _Stream
        );


     wint_t __cdecl _getwc_nolock(
         FILE* _Stream
        );


     wint_t __cdecl _putwc_nolock(
         wchar_t _Character,
         FILE* _Stream
        );


     wint_t __cdecl _ungetwc_nolock(
         wint_t _Character,
         FILE* _Stream
        );
#line 268 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"

     int __cdecl __stdio_common_vfwprintf(
         unsigned __int64 _Options,
         FILE* _Stream,
           wchar_t const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


     int __cdecl __stdio_common_vfwprintf_s(
         unsigned __int64 _Options,
         FILE* _Stream,
           wchar_t const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


     int __cdecl __stdio_common_vfwprintf_p(
         unsigned __int64 _Options,
         FILE* _Stream,
           wchar_t const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


    __inline  int  __cdecl  _vfwprintf_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return __stdio_common_vfwprintf( (*__local_stdio_printf_options()) , _Stream, _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vfwprintf(
         FILE* const _Stream,
           wchar_t const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfwprintf_l(_Stream, _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vfwprintf_s_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return __stdio_common_vfwprintf_s( (*__local_stdio_printf_options()) , _Stream, _Format, _Locale, _ArgList);
    }





        __inline  int  __cdecl  vfwprintf_s(
             FILE* const _Stream,
               wchar_t const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vfwprintf_s_l(_Stream, _Format,  ((void *)0) , _ArgList);
        }





    __inline  int  __cdecl  _vfwprintf_p_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return __stdio_common_vfwprintf_p( (*__local_stdio_printf_options()) , _Stream, _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  _vfwprintf_p(
         FILE* const _Stream,
           wchar_t const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfwprintf_p_l(_Stream, _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vwprintf_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return _vfwprintf_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vwprintf(
           wchar_t const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfwprintf_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vwprintf_s_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return _vfwprintf_s_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
    }





        __inline  int  __cdecl  vwprintf_s(
               wchar_t const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vfwprintf_s_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
        }





    __inline  int  __cdecl  _vwprintf_p_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return _vfwprintf_p_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  _vwprintf_p(
           wchar_t const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfwprintf_p_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _fwprintf_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwprintf_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  fwprintf(
         FILE* const _Stream,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfwprintf_l(_Stream, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _fwprintf_s_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwprintf_s_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  fwprintf_s(
             FILE* const _Stream,
               wchar_t const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vfwprintf_s_l(_Stream, _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }





    __inline  int  __cdecl  _fwprintf_p_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwprintf_p_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _fwprintf_p(
         FILE* const _Stream,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfwprintf_p_l(_Stream, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _wprintf_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwprintf_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  wprintf(
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfwprintf_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _wprintf_s_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwprintf_s_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  wprintf_s(
               wchar_t const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vfwprintf_s_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }





    __inline  int  __cdecl  _wprintf_p_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwprintf_p_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _wprintf_p(
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfwprintf_p_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }









     int __cdecl __stdio_common_vfwscanf(
         unsigned __int64 _Options,
         FILE* _Stream,
           wchar_t const* _Format,
         _locale_t _Locale,
                                               va_list _ArgList
        );


    __inline  int  __cdecl  _vfwscanf_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return __stdio_common_vfwscanf(
            (*__local_stdio_scanf_options ()) ,
            _Stream, _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vfwscanf(
         FILE* const _Stream,
           wchar_t const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfwscanf_l(_Stream, _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vfwscanf_s_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return __stdio_common_vfwscanf(
            (*__local_stdio_scanf_options ())  |  (1ULL << 0) ,
            _Stream, _Format, _Locale, _ArgList);
    }





        __inline  int  __cdecl  vfwscanf_s(
             FILE* const _Stream,
               wchar_t const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vfwscanf_s_l(_Stream, _Format,  ((void *)0) , _ArgList);
        }




    __inline  int  __cdecl  _vwscanf_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return _vfwscanf_l( (__acrt_iob_func(0)) , _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vwscanf(
           wchar_t const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfwscanf_l( (__acrt_iob_func(0)) , _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vwscanf_s_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return _vfwscanf_s_l( (__acrt_iob_func(0)) , _Format, _Locale, _ArgList);
    }





        __inline  int  __cdecl  vwscanf_s(
               wchar_t const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vfwscanf_s_l( (__acrt_iob_func(0)) , _Format,  ((void *)0) , _ArgList);
        }




      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_fwscanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _fwscanf_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwscanf_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "fwscanf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  fwscanf(
         FILE* const _Stream,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfwscanf_l(_Stream, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _fwscanf_s_l(
         FILE* const _Stream,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwscanf_s_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  fwscanf_s(
             FILE* const _Stream,
               wchar_t const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vfwscanf_s_l(_Stream, _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }




      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wscanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _wscanf_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwscanf_l( (__acrt_iob_func(0)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "wscanf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  wscanf(
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfwscanf_l( (__acrt_iob_func(0)) , _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _wscanf_s_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfwscanf_s_l( (__acrt_iob_func(0)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  wscanf_s(
               wchar_t const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vfwscanf_s_l( (__acrt_iob_func(0)) , _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }
#line 1001 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"


     int __cdecl __stdio_common_vswprintf(
         unsigned __int64 _Options,
         wchar_t* _Buffer,
         size_t _BufferCount,
           wchar_t const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );



     int __cdecl __stdio_common_vswprintf_s(
         unsigned __int64 _Options,
         wchar_t* _Buffer,
         size_t _BufferCount,
           wchar_t const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );



     int __cdecl __stdio_common_vsnwprintf_s(
         unsigned __int64 _Options,
         wchar_t* _Buffer,
         size_t _BufferCount,
         size_t _MaxCount,
           wchar_t const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );



     int __cdecl __stdio_common_vswprintf_p(
         unsigned __int64 _Options,
         wchar_t* _Buffer,
         size_t _BufferCount,
           wchar_t const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_vsnwprintf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _vsnwprintf_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                     va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vswprintf(
            (*__local_stdio_printf_options())  |  (1ULL << 0) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }
#line 1067 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 1068 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable: 4793)



    __inline  int  __cdecl  _vsnwprintf_s_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
         size_t const _MaxCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                          va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsnwprintf_s(
            (*__local_stdio_printf_options()) ,
            _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vsnwprintf_s(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
         size_t const _MaxCount,
           wchar_t const* const _Format,
                                                          va_list _ArgList
        )



    {
        return _vsnwprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format,  ((void *)0) , _ArgList);
    }


    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_snwprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details.")) __inline   int __cdecl _snwprintf(    wchar_t *_Buffer,   size_t _BufferCount,     wchar_t const* _Format, ...); __declspec(deprecated("This function or variable may be unsafe. Consider using " "_vsnwprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details.")) __inline   int __cdecl _vsnwprintf(    wchar_t *_Buffer,   size_t _BufferCount,     wchar_t const* _Format, va_list _Args);
#line 1118 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_vsnwprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _vsnwprintf(
           wchar_t* _Buffer,
         size_t _BufferCount,
           wchar_t const* _Format,
                                                     va_list _ArgList
        )



    {
#line 1132 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 1133 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable: 4996)
        return _vsnwprintf_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
#line 1135 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)
    }



#line 1148 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"


    __inline  int  __cdecl  _vswprintf_c_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                          va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vswprintf(
            (*__local_stdio_printf_options()) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vswprintf_c(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
                                                          va_list _ArgList
        )



    {
        return _vswprintf_c_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
    }




    __inline  int  __cdecl  _vswprintf_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                          va_list _ArgList
        )



    {
#line 1198 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 1199 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable: 4996)
        return _vswprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
#line 1201 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)
    }




    __inline  int  __cdecl  __vswprintf_l(
           wchar_t* const _Buffer,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return _vswprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }




    __inline  int  __cdecl  _vswprintf(
           wchar_t* const _Buffer,
           wchar_t const* const _Format,
                                         va_list _ArgList
        )



    {
        return _vswprintf_l(_Buffer, (size_t)-1, _Format,  ((void *)0) , _ArgList);
    }




    __inline  int  __cdecl  vswprintf(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
                                                          va_list _ArgList
        )



    {
        return _vswprintf_c_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
    }




    __inline  int  __cdecl  _vswprintf_s_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                      va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vswprintf_s(
            (*__local_stdio_printf_options()) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }





        __inline  int  __cdecl  vswprintf_s(
               wchar_t* const _Buffer,
             size_t const _BufferCount,
               wchar_t const* const _Format,
                                                          va_list _ArgList
            )



        {
            return _vswprintf_s_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
        }





#line 1300 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"


    __inline  int  __cdecl  _vswprintf_p_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                      va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vswprintf_p(
            (*__local_stdio_printf_options()) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vswprintf_p(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
                                                      va_list _ArgList
        )



    {
        return _vswprintf_p_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
    }




    __inline  int  __cdecl  _vscwprintf_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vswprintf(
            (*__local_stdio_printf_options())  |  (1ULL << 1) ,
            ((void *)0) , 0, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vscwprintf(
           wchar_t const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vscwprintf_l(_Format,  ((void *)0) , _ArgList);
    }




    __inline  int  __cdecl  _vscwprintf_p_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vswprintf_p(
            (*__local_stdio_printf_options())  |  (1ULL << 1) ,
            ((void *)0) , 0, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vscwprintf_p(
           wchar_t const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vscwprintf_p_l(_Format,  ((void *)0) , _ArgList);
    }




    __inline  int  __cdecl  __swprintf_l(
           wchar_t* const _Buffer,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = __vswprintf_l(_Buffer, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _swprintf_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _swprintf(
           wchar_t* const _Buffer,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = __vswprintf_l(_Buffer, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  swprintf(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }
#line 1483 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 1486 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable:4793 4996)

    __declspec(deprecated("This function or variable may be unsafe. Consider using " "__swprintf_l_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details.")) __inline   int __cdecl __swprintf_l(   wchar_t *_Buffer,     wchar_t const* _Format,   _locale_t _Locale, ...); __declspec(deprecated("This function or variable may be unsafe. Consider using " "_vswprintf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details.")) __inline   int __cdecl __vswprintf_l(   wchar_t *_Buffer,     wchar_t const* _Format,   _locale_t _Locale, va_list _Args);
#line 1497 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "swprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details.")) __inline   int __cdecl _swprintf(   wchar_t *_Buffer,     wchar_t const* _Format, ...); __declspec(deprecated("This function or variable may be unsafe. Consider using " "vswprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details.")) __inline   int __cdecl _vswprintf(   wchar_t *_Buffer,     wchar_t const* _Format, va_list _Args);
#line 1504 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)



    __inline  int  __cdecl  _swprintf_s_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  swprintf_s(
               wchar_t* const _Buffer,
             size_t const _BufferCount,
               wchar_t const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vswprintf_s_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }





#line 1557 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"


    __inline  int  __cdecl  _swprintf_p_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vswprintf_p_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _swprintf_p(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vswprintf_p_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _swprintf_c_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _swprintf_c(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vswprintf_c_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_snwprintf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _snwprintf_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
#line 1655 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 1656 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable: 4996)
        _Result = _vsnwprintf_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
#line 1658 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)

        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snwprintf(
           wchar_t* _Buffer,
         size_t _BufferCount,
           wchar_t const* _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
#line 1680 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 1681 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable: 4996)
        _Result = _vsnwprintf_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
#line 1683 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)

        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snwprintf_s_l(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
         size_t const _MaxCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vsnwprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snwprintf_s(
           wchar_t* const _Buffer,
         size_t const _BufferCount,
         size_t const _MaxCount,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vsnwprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



#line 1741 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"

    __inline  int  __cdecl  _scwprintf_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vscwprintf_l(_Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _scwprintf(
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vscwprintf_l(_Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _scwprintf_p_l(
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vscwprintf_p_l(_Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _scwprintf_p(
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vscwprintf_p_l(_Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }
#line 1816 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 1817 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable: 4141 4412 4793 4996 6054)
#line 1875 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)
#line 1891 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"

     int __cdecl __stdio_common_vswscanf(
         unsigned __int64 _Options,
           wchar_t const* _Buffer,
         size_t _BufferCount,
           wchar_t const* _Format,
         _locale_t _Locale,
                                               va_list _ArgList
        );



    __inline  int  __cdecl  _vswscanf_l(
         wchar_t const* const _Buffer,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return __stdio_common_vswscanf(
            (*__local_stdio_scanf_options ()) ,
            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }




    __inline  int  __cdecl  vswscanf(
         wchar_t const* _Buffer,
           wchar_t const* _Format,
                                      va_list _ArgList
        )



    {
        return _vswscanf_l(_Buffer, _Format,  ((void *)0) , _ArgList);
    }




    __inline  int  __cdecl  _vswscanf_s_l(
         wchar_t const* const _Buffer,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return __stdio_common_vswscanf(
            (*__local_stdio_scanf_options ())  |  (1ULL << 0) ,
            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }






        __inline  int  __cdecl  vswscanf_s(
             wchar_t const* const _Buffer,
               wchar_t const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vswscanf_s_l(_Buffer, _Format,  ((void *)0) , _ArgList);
        }





#line 1979 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"

      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_vsnwscanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _vsnwscanf_l(
           wchar_t const* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                               va_list _ArgList
        )



    {
        return __stdio_common_vswscanf(
            (*__local_stdio_scanf_options ()) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
    }




    __inline  int  __cdecl  _vsnwscanf_s_l(
           wchar_t const* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
                                                 va_list _ArgList
        )



    {
        return __stdio_common_vswscanf(
            (*__local_stdio_scanf_options ())  |  (1ULL << 0) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);
    }



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_swscanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _swscanf_l(
         wchar_t const* const _Buffer,
           wchar_t const* const _Format,
         _locale_t _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vswscanf_l(_Buffer, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "swscanf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  swscanf(
         wchar_t const* const _Buffer,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vswscanf_l(_Buffer, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _swscanf_s_l(
         wchar_t const* const _Buffer,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vswscanf_s_l(_Buffer, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }






        __inline  int  __cdecl  swscanf_s(
             wchar_t const* const _Buffer,
               wchar_t const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vswscanf_s_l(_Buffer, _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }





      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_snwscanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _snwscanf_l(
           wchar_t const* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
#line 2115 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 2116 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable: 4996)
        _Result = _vsnwscanf_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
#line 2118 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)

        __crt_va_end(_ArgList);
        return _Result;
    }



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_snwscanf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _snwscanf(
           wchar_t const* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
#line 2140 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(push)
#line 2141 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(disable: 4996)
        _Result = _vsnwscanf_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
#line 2143 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
#pragma warning(pop)

        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snwscanf_s_l(
           wchar_t const* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vsnwscanf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snwscanf_s(
           wchar_t const* const _Buffer,
         size_t const _BufferCount,
           wchar_t const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vsnwscanf_s_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }
#line 2198 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdio.h"
__pragma(pack(pop))
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"

__pragma(pack(push, 8 ))
#line 69 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
typedef __int64 fpos_t;






     errno_t __cdecl _get_stream_buffer_pointers(
         FILE* _Stream,
         char*** _Base,
         char*** _Pointer,
         int** _Count
        );










         errno_t __cdecl clearerr_s(
             FILE* _Stream
            );


         errno_t __cdecl fopen_s(
             FILE** _Stream,
             char const* _FileName,
             char const* _Mode
            );



         size_t __cdecl fread_s(
             void* _Buffer,
             size_t _BufferSize,
             size_t _ElementSize,
             size_t _ElementCount,
             FILE* _Stream
            );


         errno_t __cdecl freopen_s(
             FILE** _Stream,
             char const* _FileName,
             char const* _Mode,
             FILE* _OldStream
            );


         char* __cdecl gets_s(
             char* _Buffer,
             rsize_t _Size
            );


         errno_t __cdecl tmpfile_s(
               FILE** _Stream
            );



         errno_t __cdecl tmpnam_s(
             char* _Buffer,
             rsize_t _Size
            );



     void __cdecl clearerr(
         FILE* _Stream
        );



     int __cdecl fclose(
         FILE* _Stream
        );


     int __cdecl _fcloseall(void);


     FILE* __cdecl _fdopen(
         int _FileHandle,
         char const* _Mode
        );


     int __cdecl feof(
         FILE* _Stream
        );


     int __cdecl ferror(
         FILE* _Stream
        );


     int __cdecl fflush(
         FILE* _Stream
        );



     int __cdecl fgetc(
         FILE* _Stream
        );


     int __cdecl _fgetchar(void);



     int __cdecl fgetpos(
         FILE* _Stream,
         fpos_t* _Position
        );



     char* __cdecl fgets(
         char* _Buffer,
         int _MaxCount,
         FILE* _Stream
        );


     int __cdecl _fileno(
         FILE* _Stream
        );


     int __cdecl _flushall(void);

      __declspec(deprecated("This function or variable may be unsafe. Consider using " "fopen_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     FILE* __cdecl fopen(
         char const* _FileName,
         char const* _Mode
        );




     int __cdecl fputc(
         int _Character,
         FILE* _Stream
        );


     int __cdecl _fputchar(
         int _Character
        );



     int __cdecl fputs(
         char const* _Buffer,
         FILE* _Stream
        );


     size_t __cdecl fread(
         void* _Buffer,
         size_t _ElementSize,
         size_t _ElementCount,
         FILE* _Stream
        );


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "freopen_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     FILE* __cdecl freopen(
         char const* _FileName,
         char const* _Mode,
         FILE* _Stream
        );


     FILE* __cdecl _fsopen(
         char const* _FileName,
         char const* _Mode,
         int _ShFlag
        );



     int __cdecl fsetpos(
         FILE* _Stream,
         fpos_t const* _Position
        );



     int __cdecl fseek(
         FILE* _Stream,
         long _Offset,
         int _Origin
        );



     int __cdecl _fseeki64(
         FILE* _Stream,
         __int64 _Offset,
         int _Origin
        );



     long __cdecl ftell(
         FILE* _Stream
        );



     __int64 __cdecl _ftelli64(
         FILE* _Stream
        );


     size_t __cdecl fwrite(
         void const* _Buffer,
         size_t _ElementSize,
         size_t _ElementCount,
         FILE* _Stream
        );



     int __cdecl getc(
         FILE* _Stream
        );


     int __cdecl getchar(void);


     int __cdecl _getmaxstdio(void);


#line 315 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"

     int __cdecl _getw(
         FILE* _Stream
        );

     void __cdecl perror(
         char const* _ErrorMessage
        );





         int __cdecl _pclose(
             FILE* _Stream
            );


         FILE* __cdecl _popen(
             char const* _Command,
             char const* _Mode
            );





     int __cdecl putc(
         int _Character,
         FILE* _Stream
        );


     int __cdecl putchar(
         int _Character
        );


     int __cdecl puts(
         char const* _Buffer
        );



     int __cdecl _putw(
         int _Word,
         FILE* _Stream
        );

     int __cdecl remove(
         char const* _FileName
        );


     int __cdecl rename(
         char const* _OldFileName,
         char const* _NewFileName
        );

     int __cdecl _unlink(
         char const* _FileName
        );
#line 387 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
     void __cdecl rewind(
         FILE* _Stream
        );


     int __cdecl _rmtmp(void);

    __declspec(deprecated("This function or variable may be unsafe. Consider using " "setvbuf" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     void __cdecl setbuf(
         FILE* _Stream,
           char* _Buffer
        );


     int __cdecl _setmaxstdio(
         int _Maximum
        );



     int __cdecl setvbuf(
         FILE* _Stream,
         char* _Buffer,
         int _Mode,
         size_t _Size
        );
#line 419 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"

       char* __cdecl _tempnam(
         char const* _DirectoryName,
         char const* _FilePrefix
        );
#line 429 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
      __declspec(deprecated("This function or variable may be unsafe. Consider using " "tmpfile_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     FILE* __cdecl tmpfile(void);


#line 438 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 439 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 28726)
__declspec(deprecated("This function or variable may be unsafe. Consider using " "tmpnam_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl tmpnam( char *_Buffer);
#line 445 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)



     int __cdecl ungetc(
         int _Character,
         FILE* _Stream
        );








     void __cdecl _lock_file(
         FILE* _Stream
        );

     void __cdecl _unlock_file(
         FILE* _Stream
        );



     int __cdecl _fclose_nolock(
         FILE* _Stream
        );



     int __cdecl _fflush_nolock(
         FILE* _Stream
        );



     int __cdecl _fgetc_nolock(
         FILE* _Stream
        );



     int __cdecl _fputc_nolock(
         int _Character,
         FILE* _Stream
        );


     size_t __cdecl _fread_nolock(
         void* _Buffer,
         size_t _ElementSize,
         size_t _ElementCount,
         FILE* _Stream
        );



     size_t __cdecl _fread_nolock_s(
         void* _Buffer,
         size_t _BufferSize,
         size_t _ElementSize,
         size_t _ElementCount,
         FILE* _Stream
        );


     int __cdecl _fseek_nolock(
         FILE* _Stream,
         long _Offset,
         int _Origin
        );


     int __cdecl _fseeki64_nolock(
         FILE* _Stream,
         __int64 _Offset,
         int _Origin
        );


     long __cdecl _ftell_nolock(
         FILE* _Stream
        );


     __int64 __cdecl _ftelli64_nolock(
         FILE* _Stream
        );


     size_t __cdecl _fwrite_nolock(
         void const* _Buffer,
         size_t _ElementSize,
         size_t _ElementCount,
         FILE* _Stream
        );


     int __cdecl _getc_nolock(
         FILE* _Stream
        );


     int __cdecl _putc_nolock(
         int _Character,
         FILE* _Stream
        );


     int __cdecl _ungetc_nolock(
         int _Character,
         FILE* _Stream
        );
#line 587 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
     int* __cdecl __p__commode(void);
#line 607 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
     int __cdecl __stdio_common_vfprintf(
         unsigned __int64 _Options,
         FILE* _Stream,
           char const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );

     int __cdecl __stdio_common_vfprintf_s(
         unsigned __int64 _Options,
         FILE* _Stream,
           char const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


     int __cdecl __stdio_common_vfprintf_p(
         unsigned __int64 _Options,
         FILE* _Stream,
           char const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


    __inline  int  __cdecl  _vfprintf_l(
         FILE* const _Stream,
         char const* const _Format,
         _locale_t const _Locale,
                 va_list _ArgList
        )



    {
        return __stdio_common_vfprintf( (*__local_stdio_printf_options()) , _Stream, _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vfprintf(
         FILE* const _Stream,
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfprintf_l(_Stream, _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vfprintf_s_l(
         FILE* const _Stream,
         char const* const _Format,
         _locale_t const _Locale,
                 va_list _ArgList
        )



    {
        return __stdio_common_vfprintf_s( (*__local_stdio_printf_options()) , _Stream, _Format, _Locale, _ArgList);
    }





        __inline  int  __cdecl  vfprintf_s(
             FILE* const _Stream,
               char const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vfprintf_s_l(_Stream, _Format,  ((void *)0) , _ArgList);
        }





    __inline  int  __cdecl  _vfprintf_p_l(
         FILE* const _Stream,
         char const* const _Format,
         _locale_t const _Locale,
                 va_list _ArgList
        )



    {
        return __stdio_common_vfprintf_p( (*__local_stdio_printf_options()) , _Stream, _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  _vfprintf_p(
         FILE* const _Stream,
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfprintf_p_l(_Stream, _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vprintf_l(
           char const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return _vfprintf_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vprintf(
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfprintf_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vprintf_s_l(
           char const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return _vfprintf_s_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
    }





        __inline  int  __cdecl  vprintf_s(
               char const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vfprintf_s_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
        }





    __inline  int  __cdecl  _vprintf_p_l(
           char const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        return _vfprintf_p_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  _vprintf_p(
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfprintf_p_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _fprintf_l(
         FILE* const _Stream,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfprintf_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  fprintf(
         FILE* const _Stream,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfprintf_l(_Stream, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }


     int __cdecl _set_printf_count_output(
         int _Value
        );

     int __cdecl _get_printf_count_output(void);


    __inline  int  __cdecl  _fprintf_s_l(
         FILE* const _Stream,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfprintf_s_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  fprintf_s(
             FILE* const _Stream,
               char const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vfprintf_s_l(_Stream, _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }





    __inline  int  __cdecl  _fprintf_p_l(
         FILE* const _Stream,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfprintf_p_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _fprintf_p(
         FILE* const _Stream,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfprintf_p_l(_Stream, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _printf_l(
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfprintf_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  printf(
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfprintf_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _printf_s_l(
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfprintf_s_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  printf_s(
               char const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vfprintf_s_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }





    __inline  int  __cdecl  _printf_p_l(
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfprintf_p_l( (__acrt_iob_func(1)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _printf_p(
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfprintf_p_l( (__acrt_iob_func(1)) , _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }








     int __cdecl __stdio_common_vfscanf(
         unsigned __int64 _Options,
         FILE* _Stream,
           char const* _Format,
         _locale_t _Locale,
                                               va_list _Arglist
        );


    __inline  int  __cdecl  _vfscanf_l(
         FILE* const _Stream,
           char const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return __stdio_common_vfscanf(
            (*__local_stdio_scanf_options ()) ,
            _Stream, _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vfscanf(
         FILE* const _Stream,
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfscanf_l(_Stream, _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vfscanf_s_l(
         FILE* const _Stream,
           char const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return __stdio_common_vfscanf(
            (*__local_stdio_scanf_options ())  |  (1ULL << 0) ,
            _Stream, _Format, _Locale, _ArgList);
    }






        __inline  int  __cdecl  vfscanf_s(
             FILE* const _Stream,
               char const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vfscanf_s_l(_Stream, _Format,  ((void *)0) , _ArgList);
        }





    __inline  int  __cdecl  _vscanf_l(
           char const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return _vfscanf_l( (__acrt_iob_func(0)) , _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vscanf(
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vfscanf_l( (__acrt_iob_func(0)) , _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vscanf_s_l(
           char const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return _vfscanf_s_l( (__acrt_iob_func(0)) , _Format, _Locale, _ArgList);
    }





        __inline  int  __cdecl  vscanf_s(
               char const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vfscanf_s_l( (__acrt_iob_func(0)) , _Format,  ((void *)0) , _ArgList);
        }




      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_fscanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _fscanf_l(
         FILE* const _Stream,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfscanf_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "fscanf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  fscanf(
         FILE* const _Stream,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfscanf_l(_Stream, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _fscanf_s_l(
         FILE* const _Stream,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfscanf_s_l(_Stream, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  fscanf_s(
             FILE* const _Stream,
               char const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vfscanf_s_l(_Stream, _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }




      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_scanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _scanf_l(
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfscanf_l( (__acrt_iob_func(0)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "scanf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  scanf(
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vfscanf_l( (__acrt_iob_func(0)) , _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _scanf_s_l(
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vfscanf_s_l( (__acrt_iob_func(0)) , _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  scanf_s(
               char const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vfscanf_s_l( (__acrt_iob_func(0)) , _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }
#line 1336 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"

     int __cdecl __stdio_common_vsprintf(
         unsigned __int64 _Options,
         char* _Buffer,
         size_t _BufferCount,
           char const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


     int __cdecl __stdio_common_vsprintf_s(
         unsigned __int64 _Options,
         char* _Buffer,
         size_t _BufferCount,
           char const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


     int __cdecl __stdio_common_vsnprintf_s(
         unsigned __int64 _Options,
         char* _Buffer,
         size_t _BufferCount,
         size_t _MaxCount,
           char const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


     int __cdecl __stdio_common_vsprintf_p(
         unsigned __int64 _Options,
         char* _Buffer,
         size_t _BufferCount,
           char const* _Format,
         _locale_t _Locale,
                                                va_list _ArgList
        );


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_vsnprintf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _vsnprintf_l(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
                                                     va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsprintf(
            (*__local_stdio_printf_options())  |  (1ULL << 0) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vsnprintf(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
                                                    va_list _ArgList
        )



    {
#line 1410 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 1411 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 4996)
        return _vsnprintf_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
#line 1413 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)
    }
#line 1428 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"


    __inline  int  __cdecl  vsnprintf(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
                                                          va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsprintf(
            (*__local_stdio_printf_options())  |  (1ULL << 1) ,
            _Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);

        return _Result < 0 ? -1 : _Result;
    }



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_vsprintf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _vsprintf_l(
           char* const _Buffer,
         char const* const _Format,
         _locale_t const _Locale,
                                         va_list _ArgList
        )



    {
#line 1460 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 1461 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 4996)
        return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
#line 1463 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)
    }



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "vsprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  vsprintf(
           char* const _Buffer,
           char const* const _Format,
                                         va_list _ArgList
        )



    {
#line 1478 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 1479 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 4996)
        return _vsnprintf_l(_Buffer, (size_t)-1, _Format,  ((void *)0) , _ArgList);
#line 1481 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)
    }




    __inline  int  __cdecl  _vsprintf_s_l(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
                                                      va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsprintf_s(
            (*__local_stdio_printf_options()) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }






        __inline  int  __cdecl  vsprintf_s(
               char* const _Buffer,
             size_t const _BufferCount,
               char const* const _Format,
                                                          va_list _ArgList
            )



        {
            return _vsprintf_s_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
        }



#line 1534 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"


    __inline  int  __cdecl  _vsprintf_p_l(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
                                                      va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsprintf_p(
            (*__local_stdio_printf_options()) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vsprintf_p(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
                                                      va_list _ArgList
        )



    {
        return _vsprintf_p_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
    }




    __inline  int  __cdecl  _vsnprintf_s_l(
           char* const _Buffer,
         size_t const _BufferCount,
         size_t const _MaxCount,
           char const* const _Format,
         _locale_t const _Locale,
                                                          va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsnprintf_s(
            (*__local_stdio_printf_options()) ,
            _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vsnprintf_s(
           char* const _Buffer,
         size_t const _BufferCount,
         size_t const _MaxCount,
           char const* const _Format,
                                                          va_list _ArgList
        )



    {
        return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format,  ((void *)0) , _ArgList);
    }



#line 1621 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"


        __inline  int  __cdecl  vsnprintf_s(
               char* const _Buffer,
             size_t const _BufferCount,
             size_t const _MaxCount,
               char const* const _Format,
                                                              va_list _ArgList
            )



        {
            return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format,  ((void *)0) , _ArgList);
        }



#line 1649 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"

    __inline  int  __cdecl  _vscprintf_l(
           char const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsprintf(
            (*__local_stdio_printf_options())  |  (1ULL << 1) ,
            ((void *)0) , 0, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }



    __inline  int  __cdecl  _vscprintf(
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vscprintf_l(_Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vscprintf_p_l(
           char const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsprintf_p(
            (*__local_stdio_printf_options())  |  (1ULL << 1) ,
            ((void *)0) , 0, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }



    __inline  int  __cdecl  _vscprintf_p(
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vscprintf_p_l(_Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vsnprintf_c_l(
         char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
                                                va_list _ArgList
        )



    {
        int const _Result = __stdio_common_vsprintf(
            (*__local_stdio_printf_options()) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        return _Result < 0 ? -1 : _Result;
    }




    __inline  int  __cdecl  _vsnprintf_c(
         char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
                                       va_list _ArgList
        )



    {
        return _vsnprintf_c_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
    }



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_sprintf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _sprintf_l(
           char* const _Buffer,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
#line 1762 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 1763 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 4996)
        _Result = _vsprintf_l(_Buffer, _Format, _Locale, _ArgList);
#line 1765 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)

        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  sprintf(
           char* const _Buffer,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
#line 1786 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 1787 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 4996)
        _Result = _vsprintf_l(_Buffer, _Format,  ((void *)0) , _ArgList);
#line 1789 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)

        __crt_va_end(_ArgList);
        return _Result;
    }
#line 1796 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 1797 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 4996)
#line 1798 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 28719)
#line 1799 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 28726)
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "sprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  int __cdecl sprintf( char *_Buffer, char const* _Format, ...); __declspec(deprecated("This function or variable may be unsafe. Consider using " "vsprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  int __cdecl vsprintf( char *_Buffer, char const* _Format, va_list _Args);
#line 1806 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)



    __inline  int  __cdecl  _sprintf_s_l(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }






        __inline  int  __cdecl  sprintf_s(
               char* const _Buffer,
             size_t const _BufferCount,
               char const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
            _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
            __crt_va_end(_ArgList);
            return _Result;
        }





#line 1860 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"


    __inline  int  __cdecl  _sprintf_p_l(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vsprintf_p_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _sprintf_p(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vsprintf_p_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_snprintf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _snprintf_l(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
#line 1917 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 1918 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 4996)
        _Result = _vsnprintf_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
#line 1920 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)

        __crt_va_end(_ArgList);
        return _Result;
    }
#line 1938 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"


    __inline  int  __cdecl  snprintf(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
#line 1952 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(suppress:28719)
        _Result = vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snprintf(
           char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
#line 1973 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(suppress:28719)
        _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }


    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_snprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))    int __cdecl _snprintf(    char *_Buffer,   size_t _BufferCount,     char const* _Format, ...); __declspec(deprecated("This function or variable may be unsafe. Consider using " "_vsnprintf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))    int __cdecl _vsnprintf(    char *_Buffer,   size_t _BufferCount,     char const* _Format, va_list _Args);
#line 1989 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"


    __inline  int  __cdecl  _snprintf_c_l(
         char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vsnprintf_c_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snprintf_c(
         char* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vsnprintf_c_l(_Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snprintf_s_l(
           char* const _Buffer,
         size_t const _BufferCount,
         size_t const _MaxCount,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snprintf_s(
           char* const _Buffer,
         size_t const _BufferCount,
         size_t const _MaxCount,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



#line 2081 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"

    __inline  int  __cdecl  _scprintf_l(
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vscprintf_l(_Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _scprintf(
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vscprintf_l(_Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _scprintf_p_l(
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vscprintf_p_l(_Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _scprintf_p(
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vscprintf_p(_Format, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }







     int __cdecl __stdio_common_vsscanf(
         unsigned __int64 _Options,
           char const* _Buffer,
         size_t _BufferCount,
           char const* _Format,
         _locale_t _Locale,
                                               va_list _ArgList
        );


    __inline  int  __cdecl  _vsscanf_l(
         char const* const _Buffer,
           char const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()) ,
            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }



    __inline  int  __cdecl  vsscanf(
         char const* const _Buffer,
           char const* const _Format,
                                      va_list _ArgList
        )



    {
        return _vsscanf_l(_Buffer, _Format,  ((void *)0) , _ArgList);
    }



    __inline  int  __cdecl  _vsscanf_s_l(
         char const* const _Buffer,
           char const* const _Format,
         _locale_t const _Locale,
                                      va_list _ArgList
        )



    {
        return __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ())  |  (1ULL << 0) ,
            _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
    }
#line 2215 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 2216 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable:6530)


        __inline  int  __cdecl  vsscanf_s(
             char const* const _Buffer,
               char const* const _Format,
                                          va_list _ArgList
            )



        {
            return _vsscanf_s_l(_Buffer, _Format,  ((void *)0) , _ArgList);
        }



#line 2239 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)



      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_sscanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _sscanf_l(
         char const* const _Buffer,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vsscanf_l(_Buffer, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "sscanf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  sscanf(
         char const* const _Buffer,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;
        _Result = _vsscanf_l(_Buffer, _Format,  ((void *)0) , _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _sscanf_s_l(
         char const* const _Buffer,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;
        _Result = _vsscanf_s_l(_Buffer, _Format, _Locale, _ArgList);
        __crt_va_end(_ArgList);
        return _Result;
    }





        __inline  int  __cdecl  sscanf_s(
             char const* const _Buffer,
               char const* const _Format,
            ...)



        {
            int _Result;
            va_list _ArgList;
            __crt_va_start_a(_ArgList, _Format) ;
#line 2314 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 2315 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable: 4996)
            _Result = vsscanf_s(_Buffer, _Format, _ArgList);
#line 2317 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)

            __crt_va_end(_ArgList);
            return _Result;
        }
#line 2326 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(push)
#line 2327 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(disable:6530)

      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_snscanf_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _snscanf_l(
           char const* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;

        _Result = __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        __crt_va_end(_ArgList);
        return _Result;
    }


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_snscanf_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    __inline  int  __cdecl  _snscanf(
           char const* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;

        _Result = __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ()) ,
            _Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);

        __crt_va_end(_ArgList);
        return _Result;
    }




    __inline  int  __cdecl  _snscanf_s_l(
           char const* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
         _locale_t const _Locale,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Locale) ;

        _Result = __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ())  |  (1ULL << 0) ,
            _Buffer, _BufferCount, _Format, _Locale, _ArgList);

        __crt_va_end(_ArgList);
        return _Result;
    }



    __inline  int  __cdecl  _snscanf_s(
           char const* const _Buffer,
         size_t const _BufferCount,
           char const* const _Format,
        ...)



    {
        int _Result;
        va_list _ArgList;
        __crt_va_start_a(_ArgList, _Format) ;

        _Result = __stdio_common_vsscanf(
            (*__local_stdio_scanf_options ())  |  (1ULL << 0) ,
            _Buffer, _BufferCount, _Format,  ((void *)0) , _ArgList);

        __crt_va_end(_ArgList);
        return _Result;
    }
#line 2424 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
#pragma warning(pop)
#line 2471 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdio.h"
__pragma(pack(pop))
#line 577 "noconfig.H"
#line 586 "noconfig.H"
#line 1 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/limits.h"
#line 13 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/limits.h"
__pragma(pack(push, 8 ))
#line 88 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/limits.h"
__pragma(pack(pop))
#line 587 "noconfig.H"
#line 600 "noconfig.H"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/ctype.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/ctype.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wctype.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wctype.h"
__pragma(pack(push, 8 ))
#line 31 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wctype.h"
     const unsigned short* __cdecl __pctype_func(void);
     const wctype_t* __cdecl __pwctype_func(void);
#line 63 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wctype.h"
   int __cdecl iswalnum (  wint_t _C);
   int __cdecl iswalpha (  wint_t _C);
   int __cdecl iswascii (  wint_t _C);
   int __cdecl iswblank (  wint_t _C);
   int __cdecl iswcntrl (  wint_t _C);


   int __cdecl iswdigit (  wint_t _C);

   int __cdecl iswgraph (  wint_t _C);
   int __cdecl iswlower (  wint_t _C);
   int __cdecl iswprint (  wint_t _C);
   int __cdecl iswpunct (  wint_t _C);
   int __cdecl iswspace (  wint_t _C);
   int __cdecl iswupper (  wint_t _C);
   int __cdecl iswxdigit (  wint_t _C);
   int __cdecl __iswcsymf(  wint_t _C);
   int __cdecl __iswcsym (  wint_t _C);

   int __cdecl _iswalnum_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswalpha_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswblank_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswcntrl_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswdigit_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswgraph_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswlower_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswprint_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswpunct_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswspace_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswupper_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswxdigit_l(  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswcsymf_l (  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswcsym_l (  wint_t _C,   _locale_t _Locale);


   wint_t __cdecl towupper(  wint_t _C);
   wint_t __cdecl towlower(  wint_t _C);
   int __cdecl iswctype(  wint_t _C,   wctype_t _Type);

   wint_t __cdecl _towupper_l(  wint_t _C,   _locale_t _Locale);
   wint_t __cdecl _towlower_l(  wint_t _C,   _locale_t _Locale);
   int __cdecl _iswctype_l(  wint_t _C,   wctype_t _Type,   _locale_t _Locale);



       int __cdecl isleadbyte(  int _C);
       int __cdecl _isleadbyte_l(  int _C,   _locale_t _Locale);

    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "iswctype" " " "instead. See online help for details."))    int __cdecl is_wctype(  wint_t _C,   wctype_t _Type);
#line 199 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wctype.h"
__pragma(pack(pop))
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/ctype.h"

__pragma(pack(push, 8 ))









   int __cdecl _isctype(  int _C,   int _Type);
   int __cdecl _isctype_l(  int _C,   int _Type,   _locale_t _Locale);
     int __cdecl isalpha(  int _C);
   int __cdecl _isalpha_l(  int _C,   _locale_t _Locale);
     int __cdecl isupper(  int _C);
   int __cdecl _isupper_l(  int _C,   _locale_t _Locale);
     int __cdecl islower(  int _C);
   int __cdecl _islower_l(  int _C,   _locale_t _Locale);


     int __cdecl isdigit(  int _C);

   int __cdecl _isdigit_l(  int _C,   _locale_t _Locale);
   int __cdecl isxdigit(  int _C);
   int __cdecl _isxdigit_l(  int _C,   _locale_t _Locale);


     int __cdecl isspace(  int _C);

   int __cdecl _isspace_l(  int _C,   _locale_t _Locale);
   int __cdecl ispunct(  int _C);
   int __cdecl _ispunct_l(  int _C,   _locale_t _Locale);
   int __cdecl isblank(  int _C);
   int __cdecl _isblank_l(  int _C,   _locale_t _Locale);
     int __cdecl isalnum(  int _C);
   int __cdecl _isalnum_l(  int _C,   _locale_t _Locale);
   int __cdecl isprint(  int _C);
   int __cdecl _isprint_l(  int _C,   _locale_t _Locale);
   int __cdecl isgraph(  int _C);
   int __cdecl _isgraph_l(  int _C,   _locale_t _Locale);
   int __cdecl iscntrl(  int _C);
   int __cdecl _iscntrl_l(  int _C,   _locale_t _Locale);


     int __cdecl toupper(  int _C);


     int __cdecl tolower(  int _C);

     int __cdecl _tolower(  int _C);
   int __cdecl _tolower_l(  int _C,   _locale_t _Locale);
     int __cdecl _toupper(  int _C);
   int __cdecl _toupper_l(  int _C,   _locale_t _Locale);

   int __cdecl __isascii(  int _C);
   int __cdecl __toascii(  int _C);
   int __cdecl __iscsymf(  int _C);
   int __cdecl __iscsym(  int _C);
#line 100 "D:/windows kits/10/include/10.0.17134.0/ucrt/ctype.h"

         int __cdecl ___mb_cur_max_func(void);

         int __cdecl ___mb_cur_max_l_func(_locale_t _Locale);
#line 145 "D:/windows kits/10/include/10.0.17134.0/ucrt/ctype.h"
    __inline __crt_locale_data_public*  __cdecl  __acrt_get_locale_data_prefix(void const volatile* const _LocalePointers)
    {
        _locale_t const _TypedLocalePointers = (_locale_t)_LocalePointers;
        return (__crt_locale_data_public*)_TypedLocalePointers->locinfo;
    }
#line 155 "D:/windows kits/10/include/10.0.17134.0/ucrt/ctype.h"
    __inline int  __cdecl  _chvalidchk_l(
         int const _C,
         int const _Mask,
         _locale_t const _Locale
        )
    {



        if (_Locale)
        {
            return __acrt_get_locale_data_prefix(_Locale)->_locale_pctype[(unsigned char)_C] & _Mask;
        }

        return  ( __pctype_func() [(unsigned char)(_C)] & (_Mask)) ;

    }




    __inline int  __cdecl  _ischartype_l(
         int const _C,
         int const _Mask,
         _locale_t const _Locale
        )
    {
        if (_Locale && __acrt_get_locale_data_prefix(_Locale)->_locale_mb_cur_max > 1)
        {
            return _isctype_l(_C, _Mask, _Locale);
        }

        return _chvalidchk_l(_C, _Mask, _Locale);
    }
#line 234 "D:/windows kits/10/include/10.0.17134.0/ucrt/ctype.h"
__pragma(pack(pop))
#line 601 "noconfig.H"
#line 603 "noconfig.H"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/errno.h"
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/errno.h"
__pragma(pack(push, 8 ))




     int* __cdecl _errno(void);


     errno_t __cdecl _set_errno(  int _Value);
     errno_t __cdecl _get_errno(  int* _Value);

     unsigned long* __cdecl __doserrno(void);


     errno_t __cdecl _set_doserrno(  unsigned long _Value);
     errno_t __cdecl _get_doserrno(  unsigned long * _Value);
#line 130 "D:/windows kits/10/include/10.0.17134.0/ucrt/errno.h"
__pragma(pack(pop))
#line 604 "noconfig.H"
#line 605 "noconfig.H"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_memory.h"
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_memory.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_memcpy_s.h"
#line 12 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_memcpy_s.h"
#line 1 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime_string.h"
#line 14 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime_string.h"
__pragma(pack(push, 8 ))




 void  * __cdecl memchr(
     void const* _Buf,
     int _Val,
     size_t _MaxCount
    );


int __cdecl memcmp(
     void const* _Buf1,
     void const* _Buf2,
     size_t _Size
    );




#line 40 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime_string.h"
void* __cdecl memcpy(
     void* _Dst,
     void const* _Src,
     size_t _Size
    );


 void* __cdecl memmove(
     void* _Dst,
     void const* _Src,
     size_t _Size
    );



#line 60 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/vcruntime_string.h"
void* __cdecl memset(
     void* _Dst,
     int _Val,
     size_t _Size
    );


 char  * __cdecl strchr(
     char const* _Str,
     int _Val
    );


 char  * __cdecl strrchr(
     char const* _Str,
     int _Ch
    );


 char  * __cdecl strstr(
     char const* _Str,
     char const* _SubStr
    );



 wchar_t  * __cdecl wcschr(
     wchar_t const* _Str,
     wchar_t _Ch
    );


 wchar_t  * __cdecl wcsrchr(
     wchar_t const* _Str,
     wchar_t _Ch
    );



 wchar_t  * __cdecl wcsstr(
     wchar_t const* _Str,
     wchar_t const* _SubStr
    );



__pragma(pack(pop))
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_memcpy_s.h"

__pragma(pack(push, 8 ))
#line 33 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_memcpy_s.h"


    static __inline  errno_t  __cdecl  memcpy_s(
         void* const _Destination,
         rsize_t const _DestinationSize,
         void const* const _Source,
         rsize_t const _SourceSize
        )
    {
        if (_SourceSize == 0)
        {
            return 0;
        }

        { int _Expr_val=!!(_Destination != ((void *)0) ); if (!(_Expr_val)) { (*_errno()) = 22 ; _invalid_parameter_noinfo(); return 22 ; } } ;
        if (_Source ==  ((void *)0)  || _DestinationSize < _SourceSize)
        {
            memset(_Destination, 0, _DestinationSize);

            { int _Expr_val=!!(_Source != ((void *)0) ); if (!(_Expr_val)) { (*_errno()) = 22 ; _invalid_parameter_noinfo(); return 22 ; } } ;
            { int _Expr_val=!!(_DestinationSize >= _SourceSize); if (!(_Expr_val)) { (*_errno()) = 34 ; _invalid_parameter_noinfo(); return 34 ; } } ;


            return  22 ;
        }

        memcpy(_Destination, _Source, _SourceSize);
        return 0;
    }


    static __inline  errno_t  __cdecl  memmove_s(
         void* const _Destination,
         rsize_t const _DestinationSize,
         void const* const _Source,
         rsize_t const _SourceSize
        )
    {
        if (_SourceSize == 0)
        {
            return 0;
        }

        { int _Expr_val=!!(_Destination != ((void *)0) ); if (!(_Expr_val)) { (*_errno()) = 22 ; _invalid_parameter_noinfo(); return 22 ; } } ;
        { int _Expr_val=!!(_Source != ((void *)0) ); if (!(_Expr_val)) { (*_errno()) = 22 ; _invalid_parameter_noinfo(); return 22 ; } } ;
        { int _Expr_val=!!(_DestinationSize >= _SourceSize); if (!(_Expr_val)) { (*_errno()) = 34 ; _invalid_parameter_noinfo(); return 34 ; } } ;

        memmove(_Destination, _Source, _SourceSize);
        return 0;
    }





__pragma(pack(pop))
#line 15 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_memory.h"




__pragma(pack(push, 8 ))




 int __cdecl _memicmp(
     void const* _Buf1,
     void const* _Buf2,
     size_t _Size
    );


 int __cdecl _memicmp_l(
     void const* _Buf1,
     void const* _Buf2,
     size_t _Size,
     _locale_t _Locale
    );
#line 114 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_memory.h"
__pragma(pack(pop))
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#line 16 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__pragma(pack(push, 8 ))











     errno_t __cdecl wcscat_s(
         wchar_t* _Destination,
         rsize_t _SizeInWords,
         wchar_t const* _Source
        );


     errno_t __cdecl wcscpy_s(
         wchar_t* _Destination,
         rsize_t _SizeInWords,
         wchar_t const* _Source
        );


     errno_t __cdecl wcsncat_s(
         wchar_t* _Destination,
         rsize_t _SizeInWords,
         wchar_t const* _Source,
         rsize_t _MaxCount
        );


     errno_t __cdecl wcsncpy_s(
         wchar_t* _Destination,
         rsize_t _SizeInWords,
         wchar_t const* _Source,
         rsize_t _MaxCount
        );


     wchar_t* __cdecl wcstok_s(
         wchar_t* _String,
         wchar_t const* _Delimiter,
           wchar_t** _Context
        );
#line 78 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

   wchar_t* __cdecl _wcsdup(
     wchar_t const* _String
    );
#line 89 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

#line 97 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(push)
#line 98 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(disable: 28719)
#line 99 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(disable: 28726)
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "wcscat_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl wcscat( wchar_t *_Destination, wchar_t const* _Source);
#line 105 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(pop)



 int __cdecl wcscmp(
     wchar_t const* _String1,
     wchar_t const* _String2
    );


#line 120 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(push)
#line 121 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(disable: 28719)
#line 122 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(disable: 28726)
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcscpy_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl wcscpy( wchar_t *_Destination, wchar_t const* _Source);
#line 128 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(pop)


 size_t __cdecl wcscspn(
     wchar_t const* _String,
     wchar_t const* _Control
    );


 size_t __cdecl wcslen(
     wchar_t const* _String
    );



#line 146 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

#line 150 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
 size_t __cdecl wcsnlen(
     wchar_t const* _Source,
     size_t _MaxCount
    );





#line 162 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

#line 166 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
    static __inline size_t  __cdecl  wcsnlen_s(
         wchar_t const* _Source,
         size_t _MaxCount
        )
    {
        return (_Source == 0) ? 0 : wcsnlen(_Source, _MaxCount);
    }




#line 183 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcsncat_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl wcsncat(  wchar_t *_Destination,   wchar_t const* _Source,   size_t _Count);
#line 191 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

 int __cdecl wcsncmp(
     wchar_t const* _String1,
     wchar_t const* _String2,
     size_t _MaxCount
    );


#line 205 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcsncpy_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl wcsncpy(    wchar_t *_Destination,   wchar_t const* _Source,   size_t _Count);
#line 213 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

 wchar_t  * __cdecl wcspbrk(
     wchar_t const* _String,
     wchar_t const* _Control
    );


 size_t __cdecl wcsspn(
     wchar_t const* _String,
     wchar_t const* _Control
    );

  __declspec(deprecated("This function or variable may be unsafe. Consider using " "wcstok_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 wchar_t* __cdecl wcstok(
     wchar_t* _String,
     wchar_t const* _Delimiter,
       wchar_t** _Context
    );
#line 243 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(push)
#line 244 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(disable: 4141 4996)
#line 245 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(disable: 28719 28726 28727)
      __declspec(deprecated("This function or variable may be unsafe. Consider using " "wcstok_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
    static __inline wchar_t*  __cdecl  _wcstok(
         wchar_t* const _String,
         wchar_t const* const _Delimiter
        )
    {
        return wcstok(_String, _Delimiter, 0);
    }
#line 270 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
#pragma warning(pop)






  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcserror_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 wchar_t* __cdecl _wcserror(
     int _ErrorNumber
    );


 errno_t __cdecl _wcserror_s(
     wchar_t* _Buffer,
     size_t _SizeInWords,
     int _ErrorNumber
    );


#line 295 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "__wcserror_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 wchar_t* __cdecl __wcserror(
     wchar_t const* _String
    );

   errno_t __cdecl __wcserror_s(
     wchar_t* _Buffer,
     size_t _SizeInWords,
     wchar_t const* _ErrorMessage
    );


#line 314 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
   int __cdecl _wcsicmp(
     wchar_t const* _String1,
     wchar_t const* _String2
    );

   int __cdecl _wcsicmp_l(
     wchar_t const* _String1,
     wchar_t const* _String2,
     _locale_t _Locale
    );

   int __cdecl _wcsnicmp(
     wchar_t const* _String1,
     wchar_t const* _String2,
     size_t _MaxCount
    );

   int __cdecl _wcsnicmp_l(
     wchar_t const* _String1,
     wchar_t const* _String2,
     size_t _MaxCount,
     _locale_t _Locale
    );

   errno_t __cdecl _wcsnset_s(
     wchar_t* _Destination,
     size_t _SizeInWords,
     wchar_t _Value,
     size_t _MaxCount
    );


#line 352 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcsnset_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wcsnset(  wchar_t *_String,   wchar_t _Value,   size_t _MaxCount);
#line 360 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
 wchar_t* __cdecl _wcsrev(
     wchar_t* _String
    );

   errno_t __cdecl _wcsset_s(
     wchar_t* _Destination,
     size_t _SizeInWords,
     wchar_t _Value
    );


#line 376 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcsset_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wcsset(  wchar_t *_String,   wchar_t _Value);
#line 383 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
   errno_t __cdecl _wcslwr_s(
     wchar_t* _String,
     size_t _SizeInWords
    );


#line 393 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcslwr_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wcslwr( wchar_t *_String);
#line 398 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

 errno_t __cdecl _wcslwr_s_l(
     wchar_t* _String,
     size_t _SizeInWords,
     _locale_t _Locale
    );


#line 411 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcslwr_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wcslwr_l(  wchar_t *_String,   _locale_t _Locale);
#line 418 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

 errno_t __cdecl _wcsupr_s(
     wchar_t* _String,
     size_t _Size
    );


#line 429 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcsupr_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wcsupr( wchar_t *_String);
#line 434 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"

 errno_t __cdecl _wcsupr_s_l(
     wchar_t* _String,
     size_t _Size,
     _locale_t _Locale
    );


#line 447 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcsupr_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wcsupr_l(  wchar_t *_String,   _locale_t _Locale);
#line 454 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"


 size_t __cdecl wcsxfrm(
       wchar_t* _Destination,
     wchar_t const* _Source,
       size_t _MaxCount
    );



 size_t __cdecl _wcsxfrm_l(
       wchar_t* _Destination,
     wchar_t const* _Source,
       size_t _MaxCount,
     _locale_t _Locale
    );


 int __cdecl wcscoll(
     wchar_t const* _String1,
     wchar_t const* _String2
    );


 int __cdecl _wcscoll_l(
     wchar_t const* _String1,
     wchar_t const* _String2,
     _locale_t _Locale
    );


 int __cdecl _wcsicoll(
     wchar_t const* _String1,
     wchar_t const* _String2
    );


 int __cdecl _wcsicoll_l(
     wchar_t const* _String1,
     wchar_t const* _String2,
     _locale_t _Locale
    );


 int __cdecl _wcsncoll(
     wchar_t const* _String1,
     wchar_t const* _String2,
     size_t _MaxCount
    );


 int __cdecl _wcsncoll_l(
     wchar_t const* _String1,
     wchar_t const* _String2,
     size_t _MaxCount,
     _locale_t _Locale
    );


 int __cdecl _wcsnicoll(
     wchar_t const* _String1,
     wchar_t const* _String2,
     size_t _MaxCount
    );


 int __cdecl _wcsnicoll_l(
     wchar_t const* _String1,
     wchar_t const* _String2,
     size_t _MaxCount,
     _locale_t _Locale
    );
#line 647 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstring.h"
__pragma(pack(pop))
#line 15 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"




__pragma(pack(push, 8 ))








     errno_t __cdecl strcpy_s(
         char* _Destination,
         rsize_t _SizeInBytes,
         char const* _Source
        );


     errno_t __cdecl strcat_s(
         char* _Destination,
         rsize_t _SizeInBytes,
         char const* _Source
        );


     errno_t __cdecl strerror_s(
         char* _Buffer,
         size_t _SizeInBytes,
         int _ErrorNumber);


     errno_t __cdecl strncat_s(
         char* _Destination,
         rsize_t _SizeInBytes,
         char const* _Source,
         rsize_t _MaxCount
        );


     errno_t __cdecl strncpy_s(
         char* _Destination,
         rsize_t _SizeInBytes,
         char const* _Source,
         rsize_t _MaxCount
        );


     char* __cdecl strtok_s(
         char* _String,
         char const* _Delimiter,
           char** _Context
        );



 void* __cdecl _memccpy(
     void* _Dst,
     void const* _Src,
     int _Val,
     size_t _MaxCount
    );


#line 87 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#pragma warning(push)
#line 88 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#pragma warning(disable: 28719)
#line 89 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#pragma warning(disable: 28726)
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "strcat_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl strcat( char *_Destination, char const* _Source);
#line 95 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#pragma warning(pop)




int __cdecl strcmp(
     char const* _Str1,
     char const* _Str2
    );


 int __cdecl _strcmpi(
     char const* _String1,
     char const* _String2
    );


 int __cdecl strcoll(
     char const* _String1,
     char const* _String2
    );


 int __cdecl _strcoll_l(
     char const* _String1,
     char const* _String2,
     _locale_t _Locale
    );


#line 130 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#pragma warning(push)
#line 131 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#pragma warning(disable: 28719)
#line 132 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#pragma warning(disable: 28726)
__declspec(deprecated("This function or variable may be unsafe. Consider using " "strcpy_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl strcpy( char *_Destination, char const* _Source);
#line 138 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
#pragma warning(pop)


 size_t __cdecl strcspn(
     char const* _Str,
     char const* _Control
    );
#line 151 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

   char* __cdecl _strdup(
     char const* _Source
    );
#line 160 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_strerror_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl _strerror(
     char const* _ErrorMessage
    );


 errno_t __cdecl _strerror_s(
     char* _Buffer,
     size_t _SizeInBytes,
     char const* _ErrorMessage
    );


#line 180 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

  __declspec(deprecated("This function or variable may be unsafe. Consider using " "strerror_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl strerror(
     int _ErrorMessage
    );


#line 192 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

 int __cdecl _stricmp(
     char const* _String1,
     char const* _String2
    );


 int __cdecl _stricoll(
     char const* _String1,
     char const* _String2
    );


 int __cdecl _stricoll_l(
     char const* _String1,
     char const* _String2,
     _locale_t _Locale
    );


 int __cdecl _stricmp_l(
     char const* _String1,
     char const* _String2,
     _locale_t _Locale
    );


size_t __cdecl strlen(
     char const* _Str
    );


 errno_t __cdecl _strlwr_s(
     char* _String,
     size_t _Size
    );


#line 234 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strlwr_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _strlwr( char *_String);
#line 239 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

 errno_t __cdecl _strlwr_s_l(
     char* _String,
     size_t _Size,
     _locale_t _Locale
    );


#line 252 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strlwr_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _strlwr_l(  char *_String,   _locale_t _Locale);
#line 259 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

#line 266 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "strncat_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl strncat(  char *_Destination,   char const* _Source,   size_t _Count);
#line 274 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

 int __cdecl strncmp(
     char const* _Str1,
     char const* _Str2,
     size_t _MaxCount
    );


 int __cdecl _strnicmp(
     char const* _String1,
     char const* _String2,
     size_t _MaxCount
    );


 int __cdecl _strnicmp_l(
     char const* _String1,
     char const* _String2,
     size_t _MaxCount,
     _locale_t _Locale
    );


 int __cdecl _strnicoll(
     char const* _String1,
     char const* _String2,
     size_t _MaxCount
    );


 int __cdecl _strnicoll_l(
     char const* _String1,
     char const* _String2,
     size_t _MaxCount,
     _locale_t _Locale
    );


 int __cdecl _strncoll(
     char const* _String1,
     char const* _String2,
     size_t _MaxCount
    );


 int __cdecl _strncoll_l(
     char const* _String1,
     char const* _String2,
     size_t _MaxCount,
     _locale_t _Locale
    );

 size_t __cdecl __strncnt(
     char const* _String,
     size_t _Count
    );


#line 338 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "strncpy_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl strncpy(    char *_Destination,   char const* _Source,   size_t _Count);
#line 346 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"


#line 351 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

#line 355 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
 size_t __cdecl strnlen(
     char const* _String,
     size_t _MaxCount
    );





#line 367 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

#line 371 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
    static __inline size_t  __cdecl  strnlen_s(
         char const* _String,
         size_t _MaxCount
        )
    {
        return _String == 0 ? 0 : strnlen(_String, _MaxCount);
    }




 errno_t __cdecl _strnset_s(
     char* _String,
     size_t _SizeInBytes,
     int _Value,
     size_t _MaxCount
    );


#line 396 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strnset_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _strnset(  char *_Destination,   int _Value,   size_t _Count);
#line 404 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

 char  * __cdecl strpbrk(
     char const* _Str,
     char const* _Control
    );

 char* __cdecl _strrev(
     char* _Str
    );


 errno_t __cdecl _strset_s(
     char* _Destination,
     size_t _DestinationSize,
     int _Value
    );


#line 427 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strset_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _strset( char *_Destination, int _Value);
#line 433 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

 size_t __cdecl strspn(
     char const* _Str,
     char const* _Control
    );

  __declspec(deprecated("This function or variable may be unsafe. Consider using " "strtok_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl strtok(
     char* _String,
     char const* _Delimiter
    );


 errno_t __cdecl _strupr_s(
     char* _String,
     size_t _Size
    );


#line 456 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strupr_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _strupr( char *_String);
#line 461 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"

 errno_t __cdecl _strupr_s_l(
     char* _String,
     size_t _Size,
     _locale_t _Locale
    );


#line 474 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strupr_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _strupr_l(  char *_String,   _locale_t _Locale);
#line 481 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"


 size_t __cdecl strxfrm(
       char* _Destination,
     char const* _Source,
       size_t _MaxCount
    );



 size_t __cdecl _strxfrm_l(
       char* _Destination,
     char const* _Source,
       size_t _MaxCount,
     _locale_t _Locale
    );
#line 592 "D:/windows kits/10/include/10.0.17134.0/ucrt/string.h"
__pragma(pack(pop))
#line 606 "noconfig.H"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_malloc.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_malloc.h"
__pragma(pack(push, 8 ))
#line 53 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_malloc.h"

    __declspec(restrict)
void* __cdecl _calloc_base(
     size_t _Count,
     size_t _Size
    );


      __declspec(restrict)
void* __cdecl calloc(
       size_t _Count,
       size_t _Size
    );


 int __cdecl _callnewh(
     size_t _Size
    );



void* __cdecl _expand(
     void* _Block,
       size_t _Size
    );


void __cdecl _free_base(
       void* _Block
    );


void __cdecl free(
       void* _Block
    );


    __declspec(restrict)
void* __cdecl _malloc_base(
     size_t _Size
    );


      __declspec(restrict)
void* __cdecl malloc(
       size_t _Size
    );



size_t __cdecl _msize_base(
     void* _Block
    );



size_t __cdecl _msize(
     void* _Block
    );


    __declspec(restrict)
void* __cdecl _realloc_base(
       void* _Block,
     size_t _Size
    );


    __declspec(restrict)
void* __cdecl realloc(
       void* _Block,
       size_t _Size
    );


    __declspec(restrict)
void* __cdecl _recalloc_base(
       void* _Block,
     size_t _Count,
     size_t _Size
    );


    __declspec(restrict)
void* __cdecl _recalloc(
       void* _Block,
       size_t _Count,
       size_t _Size
    );


void __cdecl _aligned_free(
       void* _Block
    );


    __declspec(restrict)
void* __cdecl _aligned_malloc(
       size_t _Size,
     size_t _Alignment
    );


    __declspec(restrict)
void* __cdecl _aligned_offset_malloc(
       size_t _Size,
     size_t _Alignment,
     size_t _Offset
    );



size_t __cdecl _aligned_msize(
     void* _Block,
     size_t _Alignment,
     size_t _Offset
    );


    __declspec(restrict)
void* __cdecl _aligned_offset_realloc(
       void* _Block,
       size_t _Size,
     size_t _Alignment,
     size_t _Offset
    );


    __declspec(restrict)
void* __cdecl _aligned_offset_recalloc(
       void* _Block,
       size_t _Count,
       size_t _Size,
     size_t _Alignment,
     size_t _Offset
    );


    __declspec(restrict)
void* __cdecl _aligned_realloc(
       void* _Block,
       size_t _Size,
     size_t _Alignment
    );


    __declspec(restrict)
void* __cdecl _aligned_recalloc(
       void* _Block,
       size_t _Count,
       size_t _Size,
     size_t _Alignment
    );
#line 228 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_malloc.h"
__pragma(pack(pop))
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_search.h"
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_search.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/stddef.h"
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/stddef.h"
__pragma(pack(push, 8 ))
#line 31 "D:/windows kits/10/include/10.0.17134.0/ucrt/stddef.h"
     int* __cdecl _errno(void);


     errno_t __cdecl _set_errno(  int _Value);
     errno_t __cdecl _get_errno(  int* _Value);
#line 51 "D:/windows kits/10/include/10.0.17134.0/ucrt/stddef.h"
 extern unsigned long __cdecl __threadid(void);

 extern uintptr_t __cdecl __threadhandle(void);



__pragma(pack(pop))
#line 15 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_search.h"

__pragma(pack(push, 8 ))


    typedef int (__cdecl* _CoreCrtSecureSearchSortCompareFunction)(void*, void const*, void const*);
    typedef int (__cdecl* _CoreCrtNonSecureSearchSortCompareFunction)(void const*, void const*);





     void* __cdecl bsearch_s(
         void const* _Key,
         void const* _Base,
         rsize_t _NumOfElements,
         rsize_t _SizeOfElements,
         _CoreCrtSecureSearchSortCompareFunction _CompareFunction,
         void* _Context
        );

     void __cdecl qsort_s(
         void* _Base,
         rsize_t _NumOfElements,
         rsize_t _SizeOfElements,
         _CoreCrtSecureSearchSortCompareFunction _CompareFunction,
         void* _Context
        );






 void* __cdecl bsearch(
     void const* _Key,
     void const* _Base,
     size_t _NumOfElements,
     size_t _SizeOfElements,
     _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
    );

 void __cdecl qsort(
     void* _Base,
     size_t _NumOfElements,
     size_t _SizeOfElements,
     _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
    );


 void* __cdecl _lfind_s(
     void const* _Key,
     void const* _Base,
     unsigned int* _NumOfElements,
     size_t _SizeOfElements,
     _CoreCrtSecureSearchSortCompareFunction _CompareFunction,
     void* _Context
    );


 void* __cdecl _lfind(
     void const* _Key,
     void const* _Base,
     unsigned int* _NumOfElements,
     unsigned int _SizeOfElements,
     _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
    );


 void* __cdecl _lsearch_s(
     void const* _Key,
     void* _Base,
     unsigned int* _NumOfElements,
     size_t _SizeOfElements,
     _CoreCrtSecureSearchSortCompareFunction _CompareFunction,
     void* _Context
    );


 void* __cdecl _lsearch(
     void const* _Key,
     void* _Base,
     unsigned int* _NumOfElements,
     unsigned int _SizeOfElements,
     _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction
    );
#line 212 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_search.h"
__pragma(pack(pop))
#line 15 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
__pragma(pack(push, 8 ))
#line 48 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"


     errno_t __cdecl _itow_s(
         int _Value,
         wchar_t* _Buffer,
         size_t _BufferCount,
         int _Radix
        );


#line 64 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_itow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _itow(int _Value,  wchar_t *_Buffer, int _Radix);
#line 71 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"


     errno_t __cdecl _ltow_s(
         long _Value,
         wchar_t* _Buffer,
         size_t _BufferCount,
         int _Radix
        );


#line 87 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ltow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _ltow(long _Value,  wchar_t *_Buffer, int _Radix);
#line 94 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"

     errno_t __cdecl _ultow_s(
         unsigned long _Value,
         wchar_t* _Buffer,
         size_t _BufferCount,
         int _Radix
        );


#line 109 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ultow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _ultow(unsigned long _Value,  wchar_t *_Buffer, int _Radix);
#line 116 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"

     double __cdecl wcstod(
         wchar_t const* _String,
           wchar_t** _EndPtr
        );


     double __cdecl _wcstod_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         _locale_t _Locale
        );


     long __cdecl wcstol(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix
        );


     long __cdecl _wcstol_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix,
         _locale_t _Locale
        );


     long long __cdecl wcstoll(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix
        );


     long long __cdecl _wcstoll_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix,
         _locale_t _Locale
        );


     unsigned long __cdecl wcstoul(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix
        );


     unsigned long __cdecl _wcstoul_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix,
         _locale_t _Locale
        );


     unsigned long long __cdecl wcstoull(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix
        );


     unsigned long long __cdecl _wcstoull_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix,
         _locale_t _Locale
        );


     long double __cdecl wcstold(
         wchar_t const* _String,
           wchar_t** _EndPtr
        );


     long double __cdecl _wcstold_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         _locale_t _Locale
        );


     float __cdecl wcstof(
         wchar_t const* _String,
           wchar_t** _EndPtr
        );


     float __cdecl _wcstof_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         _locale_t _Locale
        );


     double __cdecl _wtof(
         wchar_t const* _String
        );


     double __cdecl _wtof_l(
         wchar_t const* _String,
         _locale_t _Locale
        );


     int __cdecl _wtoi(
         wchar_t const* _String
        );


     int __cdecl _wtoi_l(
         wchar_t const* _String,
         _locale_t _Locale
        );


     long __cdecl _wtol(
         wchar_t const* _String
        );


     long __cdecl _wtol_l(
         wchar_t const* _String,
         _locale_t _Locale
        );


     long long __cdecl _wtoll(
         wchar_t const* _String
        );


     long long __cdecl _wtoll_l(
         wchar_t const* _String,
         _locale_t _Locale
        );


     errno_t __cdecl _i64tow_s(
         __int64 _Value,
         wchar_t* _Buffer,
         size_t _BufferCount,
         int _Radix
        );

    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_i64tow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     wchar_t* __cdecl _i64tow(
         __int64 _Value,
           wchar_t* _Buffer,
         int _Radix
        );


     errno_t __cdecl _ui64tow_s(
         unsigned __int64 _Value,
         wchar_t* _Buffer,
         size_t _BufferCount,
         int _Radix
        );

    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ui64tow_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     wchar_t* __cdecl _ui64tow(
         unsigned __int64 _Value,
           wchar_t* _Buffer,
         int _Radix
        );


     __int64 __cdecl _wtoi64(
         wchar_t const* _String
        );


     __int64 __cdecl _wtoi64_l(
         wchar_t const* _String,
         _locale_t _Locale
        );


     __int64 __cdecl _wcstoi64(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix
        );


     __int64 __cdecl _wcstoi64_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix,
         _locale_t _Locale
        );


     unsigned __int64 __cdecl _wcstoui64(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix
        );


     unsigned __int64 __cdecl _wcstoui64_l(
         wchar_t const* _String,
           wchar_t** _EndPtr,
         int _Radix,
         _locale_t _Locale
        );
#line 330 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#pragma push_macro("_wfullpath")




       wchar_t* __cdecl _wfullpath(
         wchar_t* _Buffer,
         wchar_t const* _Path,
         size_t _BufferCount
        );
#line 341 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#pragma pop_macro("_wfullpath")


     errno_t __cdecl _wmakepath_s(
         wchar_t* _Buffer,
         size_t _BufferCount,
         wchar_t const* _Drive,
         wchar_t const* _Dir,
         wchar_t const* _Filename,
         wchar_t const* _Ext
        );


#line 362 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#pragma warning(push)
#line 363 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#pragma warning(disable: 28719)
#line 364 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#pragma warning(disable: 28726)
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wmakepath_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  void __cdecl _wmakepath( wchar_t *_Buffer, wchar_t const* _Drive, wchar_t const* _Dir, wchar_t const* _Filename, wchar_t const* _Ext);
#line 373 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#pragma warning(pop)

     void __cdecl _wperror(
         wchar_t const* _ErrorMessage
        );

    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wsplitpath_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     void __cdecl _wsplitpath(
         wchar_t const* _FullPath,
           wchar_t* _Drive,
           wchar_t* _Dir,
           wchar_t* _Filename,
           wchar_t* _Ext
        );

     errno_t __cdecl _wsplitpath_s(
         wchar_t const* _FullPath,
         wchar_t* _Drive,
         size_t _DriveCount,
         wchar_t* _Dir,
         size_t _DirCount,
         wchar_t* _Filename,
         size_t _FilenameCount,
         wchar_t* _Ext,
         size_t _ExtCount
        );


#line 405 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#pragma push_macro("_wdupenv_s")



         errno_t __cdecl _wdupenv_s(
               wchar_t** _Buffer,
             size_t* _BufferCount,
             wchar_t const* _VarName
            );
#line 415 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
#pragma pop_macro("_wdupenv_s")

          __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wdupenv_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
         wchar_t* __cdecl _wgetenv(
             wchar_t const* _VarName
            );



         errno_t __cdecl _wgetenv_s(
             size_t* _RequiredCount,
             wchar_t* _Buffer,
             size_t _BufferCount,
             wchar_t const* _VarName
            );


#line 439 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"

         int __cdecl _wputenv(
             wchar_t const* _EnvString
            );


         errno_t __cdecl _wputenv_s(
             wchar_t const* _Name,
             wchar_t const* _Value
            );

         errno_t __cdecl _wsearchenv_s(
             wchar_t const* _Filename,
             wchar_t const* _VarName,
             wchar_t* _Buffer,
             size_t _BufferCount
            );


#line 464 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
        __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wsearchenv_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  void __cdecl _wsearchenv(wchar_t const* _Filename, wchar_t const* _VarName,  wchar_t *_ResultPath);
#line 471 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wstdlib.h"
         int __cdecl _wsystem(
             wchar_t const* _Command
            );





__pragma(pack(pop))
#line 16 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"


__pragma(pack(push, 8 ))
#line 34 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
 void __cdecl _swab(
       char* _Buf1,
       char* _Buf2,
     int _SizeInBytes
    );
#line 52 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
     __declspec(noreturn) void __cdecl exit(  int _Code);
     __declspec(noreturn) void __cdecl _exit(  int _Code);
     __declspec(noreturn) void __cdecl _Exit(  int _Code);
     __declspec(noreturn) void __cdecl quick_exit(  int _Code);
     __declspec(noreturn) void __cdecl abort(void);






 unsigned int __cdecl _set_abort_behavior(
     unsigned int _Flags,
     unsigned int _Mask
    );






    typedef int ( __cdecl * _onexit_t)(void);
#line 140 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
    int __cdecl atexit(void (__cdecl*)(void));
    _onexit_t __cdecl _onexit(  _onexit_t _Func);


int __cdecl at_quick_exit(void (__cdecl*)(void));










    typedef void (__cdecl* _purecall_handler)(void);


    typedef void (__cdecl* _invalid_parameter_handler)(
        wchar_t const*,
        wchar_t const*,
        wchar_t const*,
        unsigned int,
        uintptr_t
        );


     _purecall_handler __cdecl _set_purecall_handler(
         _purecall_handler _Handler
        );

     _purecall_handler __cdecl _get_purecall_handler(void);


     _invalid_parameter_handler __cdecl _set_invalid_parameter_handler(
         _invalid_parameter_handler _Handler
        );

     _invalid_parameter_handler __cdecl _get_invalid_parameter_handler(void);

     _invalid_parameter_handler __cdecl _set_thread_local_invalid_parameter_handler(
         _invalid_parameter_handler _Handler
        );

     _invalid_parameter_handler __cdecl _get_thread_local_invalid_parameter_handler(void);
#line 208 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
   int __cdecl _set_error_mode(  int _Mode);




     int* __cdecl _errno(void);


     errno_t __cdecl _set_errno(  int _Value);
     errno_t __cdecl _get_errno(  int* _Value);

     unsigned long* __cdecl __doserrno(void);


     errno_t __cdecl _set_doserrno(  unsigned long _Value);
     errno_t __cdecl _get_doserrno(  unsigned long * _Value);


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "strerror" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char** __cdecl __sys_errlist(void);


      __declspec(deprecated("This function or variable may be unsafe. Consider using " "strerror" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  int * __cdecl __sys_nerr(void);


     void __cdecl perror(  char const* _ErrMsg);





__declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_pgmptr" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))    char** __cdecl __p__pgmptr (void);
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_wpgmptr" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))    wchar_t** __cdecl __p__wpgmptr(void);
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_fmode" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))    int* __cdecl __p__fmode (void);
#line 254 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"

 errno_t __cdecl _get_pgmptr (  char** _Value);


 errno_t __cdecl _get_wpgmptr(  wchar_t** _Value);

 errno_t __cdecl _set_fmode (  int _Mode );

 errno_t __cdecl _get_fmode (  int* _PMode);








typedef struct _div_t
{
    int quot;
    int rem;
} div_t;

typedef struct _ldiv_t
{
    long quot;
    long rem;
} ldiv_t;

typedef struct _lldiv_t
{
    long long quot;
    long long rem;
} lldiv_t;

 int __cdecl abs (  int _Number);
 long __cdecl labs (  long _Number);
 long long __cdecl llabs (  long long _Number);
 __int64 __cdecl _abs64(  __int64 _Number);

 unsigned short __cdecl _byteswap_ushort(  unsigned short _Number);
 unsigned long __cdecl _byteswap_ulong (  unsigned long _Number);
 unsigned __int64 __cdecl _byteswap_uint64(  unsigned __int64 _Number);

   div_t __cdecl div (  int _Numerator,   int _Denominator);
   ldiv_t __cdecl ldiv (  long _Numerator,   long _Denominator);
   lldiv_t __cdecl lldiv(  long long _Numerator,   long long _Denominator);
#line 304 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning (push)
#line 305 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning (disable:6540)

unsigned int __cdecl _rotl(
     unsigned int _Value,
     int _Shift
    );


unsigned long __cdecl _lrotl(
     unsigned long _Value,
     int _Shift
    );

unsigned __int64 __cdecl _rotl64(
     unsigned __int64 _Value,
     int _Shift
    );

unsigned int __cdecl _rotr(
     unsigned int _Value,
     int _Shift
    );


unsigned long __cdecl _lrotr(
     unsigned long _Value,
     int _Shift
    );

unsigned __int64 __cdecl _rotr64(
     unsigned __int64 _Value,
     int _Shift
    );
#line 339 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning (pop)






 void __cdecl srand(  unsigned int _Seed);

   int __cdecl rand(void);
#line 390 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma pack(push, 4)
    typedef struct
    {
        unsigned char ld[10];
    } _LDOUBLE;
#line 395 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma pack(pop)
#line 411 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
typedef struct
{
    double x;
} _CRT_DOUBLE;

typedef struct
{
    float f;
} _CRT_FLOAT;
#line 422 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma push_macro("long")


typedef struct
{
    long double x;
} _LONGDOUBLE;
#line 430 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma pop_macro("long")
#line 432 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma pack(push, 4)
typedef struct
{
    unsigned char ld12[12];
} _LDBL12;
#line 437 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma pack(pop)








   double __cdecl atof (  char const* _String);
     int __cdecl atoi (  char const* _String);
   long __cdecl atol (  char const* _String);
   long long __cdecl atoll (  char const* _String);
   __int64 __cdecl _atoi64(  char const* _String);

   double __cdecl _atof_l (  char const* _String,   _locale_t _Locale);
   int __cdecl _atoi_l (  char const* _String,   _locale_t _Locale);
   long __cdecl _atol_l (  char const* _String,   _locale_t _Locale);
   long long __cdecl _atoll_l (  char const* _String,   _locale_t _Locale);
   __int64 __cdecl _atoi64_l(  char const* _String,   _locale_t _Locale);

   int __cdecl _atoflt (  _CRT_FLOAT* _Result,   char const* _String);
   int __cdecl _atodbl (  _CRT_DOUBLE* _Result,   char* _String);
   int __cdecl _atoldbl(  _LDOUBLE* _Result,   char* _String);


 int __cdecl _atoflt_l(
     _CRT_FLOAT* _Result,
     char const* _String,
     _locale_t _Locale
    );


 int __cdecl _atodbl_l(
     _CRT_DOUBLE* _Result,
     char* _String,
     _locale_t _Locale
    );



 int __cdecl _atoldbl_l(
     _LDOUBLE* _Result,
     char* _String,
     _locale_t _Locale
    );


 float __cdecl strtof(
     char const* _String,
       char** _EndPtr
    );


 float __cdecl _strtof_l(
     char const* _String,
       char** _EndPtr,
     _locale_t _Locale
    );


 double __cdecl strtod(
     char const* _String,
       char** _EndPtr
    );


 double __cdecl _strtod_l(
     char const* _String,
       char** _EndPtr,
     _locale_t _Locale
    );


 long double __cdecl strtold(
     char const* _String,
       char** _EndPtr
    );


 long double __cdecl _strtold_l(
     char const* _String,
       char** _EndPtr,
     _locale_t _Locale
    );


 long __cdecl strtol(
     char const* _String,
       char** _EndPtr,
     int _Radix
    );


 long __cdecl _strtol_l(
     char const* _String,
       char** _EndPtr,
     int _Radix,
     _locale_t _Locale
    );


 long long __cdecl strtoll(
     char const* _String,
       char** _EndPtr,
     int _Radix
    );


 long long __cdecl _strtoll_l(
     char const* _String,
       char** _EndPtr,
     int _Radix,
     _locale_t _Locale
    );


 unsigned long __cdecl strtoul(
     char const* _String,
       char** _EndPtr,
     int _Radix
    );


 unsigned long __cdecl _strtoul_l(
     char const* _String,
       char** _EndPtr,
     int _Radix,
     _locale_t _Locale
    );


 unsigned long long __cdecl strtoull(
     char const* _String,
       char** _EndPtr,
     int _Radix
    );


 unsigned long long __cdecl _strtoull_l(
     char const* _String,
       char** _EndPtr,
     int _Radix,
     _locale_t _Locale
    );


 __int64 __cdecl _strtoi64(
     char const* _String,
       char** _EndPtr,
     int _Radix
    );


 __int64 __cdecl _strtoi64_l(
     char const* _String,
       char** _EndPtr,
     int _Radix,
     _locale_t _Locale
    );


 unsigned __int64 __cdecl _strtoui64(
     char const* _String,
       char** _EndPtr,
     int _Radix
    );


 unsigned __int64 __cdecl _strtoui64_l(
     char const* _String,
       char** _EndPtr,
     int _Radix,
     _locale_t _Locale
    );










 errno_t __cdecl _itoa_s(
     int _Value,
     char* _Buffer,
     size_t _BufferCount,
     int _Radix
    );


#line 637 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(push)
#line 638 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(disable: 28719)
#line 639 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(disable: 28726)
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_itoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _itoa(int _Value,  char *_Buffer, int _Radix);
#line 646 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(pop)



 errno_t __cdecl _ltoa_s(
     long _Value,
     char* _Buffer,
     size_t _BufferCount,
     int _Radix
    );


#line 664 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_ltoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _ltoa(long _Value,  char *_Buffer, int _Radix);
#line 671 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"


 errno_t __cdecl _ultoa_s(
     unsigned long _Value,
     char* _Buffer,
     size_t _BufferCount,
     int _Radix
    );


#line 687 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(push)
#line 688 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(disable: 28726)
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_ultoa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _ultoa(unsigned long _Value,  char *_Buffer, int _Radix);
#line 695 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(pop)



 errno_t __cdecl _i64toa_s(
     __int64 _Value,
     char* _Buffer,
     size_t _BufferCount,
     int _Radix
    );


__declspec(deprecated("This function or variable may be unsafe. Consider using " "_i64toa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl _i64toa(
     __int64 _Value,
       char* _Buffer,
     int _Radix
    );



 errno_t __cdecl _ui64toa_s(
     unsigned __int64 _Value,
     char* _Buffer,
     size_t _BufferCount,
     int _Radix
    );

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_ui64toa_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl _ui64toa(
     unsigned __int64 _Value,
       char* _Buffer,
     int _Radix
    );
#line 742 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"


 errno_t __cdecl _ecvt_s(
     char* _Buffer,
     size_t _BufferCount,
     double _Value,
     int _DigitCount,
     int* _PtDec,
     int* _PtSign
    );


#line 762 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ecvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl _ecvt(
     double _Value,
     int _DigitCount,
     int* _PtDec,
     int* _PtSign
    );



 errno_t __cdecl _fcvt_s(
     char* _Buffer,
     size_t _BufferCount,
     double _Value,
     int _FractionalDigitCount,
     int* _PtDec,
     int* _PtSign
    );


#line 791 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"

  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_fcvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl _fcvt(
     double _Value,
     int _FractionalDigitCount,
     int* _PtDec,
     int* _PtSign
    );


 errno_t __cdecl _gcvt_s(
     char* _Buffer,
     size_t _BufferCount,
     double _Value,
     int _DigitCount
    );


#line 816 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_gcvt_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl _gcvt(
     double _Value,
     int _DigitCount,
       char* _Buffer
    );
#line 854 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"

 int __cdecl mblen(
       char const* _Ch,
     size_t _MaxCount
    );


 int __cdecl _mblen_l(
       char const* _Ch,
     size_t _MaxCount,
     _locale_t _Locale
    );



 size_t __cdecl _mbstrlen(
     char const* _String
    );



 size_t __cdecl _mbstrlen_l(
     char const* _String,
     _locale_t _Locale
    );



 size_t __cdecl _mbstrnlen(
     char const* _String,
     size_t _MaxCount
    );



 size_t __cdecl _mbstrnlen_l(
     char const* _String,
     size_t _MaxCount,
     _locale_t _Locale
    );


 int __cdecl mbtowc(
       wchar_t* _DstCh,
     char const* _SrcCh,
     size_t _SrcSizeInBytes
    );


 int __cdecl _mbtowc_l(
       wchar_t* _DstCh,
     char const* _SrcCh,
     size_t _SrcSizeInBytes,
     _locale_t _Locale
    );


 errno_t __cdecl mbstowcs_s(
     size_t* _PtNumOfCharConverted,
     wchar_t* _DstBuf,
     size_t _SizeInWords,
     char const* _SrcBuf,
     size_t _MaxCount
    );


#line 927 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "mbstowcs_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  size_t __cdecl mbstowcs( wchar_t *_Dest, char const* _Source, size_t _MaxCount);
#line 934 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"

 errno_t __cdecl _mbstowcs_s_l(
     size_t* _PtNumOfCharConverted,
     wchar_t* _DstBuf,
     size_t _SizeInWords,
     char const* _SrcBuf,
     size_t _MaxCount,
     _locale_t _Locale
    );


#line 953 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_mbstowcs_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  size_t __cdecl _mbstowcs_l(  wchar_t *_Dest,   char const* _Source,   size_t _MaxCount,   _locale_t _Locale);
#line 965 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wctomb_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 int __cdecl wctomb(
     char* _MbCh,
     wchar_t _WCh
    );

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wctomb_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 int __cdecl _wctomb_l(
       char* _MbCh,
     wchar_t _WCh,
     _locale_t _Locale
    );




     errno_t __cdecl wctomb_s(
         int* _SizeConverted,
         char* _MbCh,
         rsize_t _SizeInBytes,
         wchar_t _WCh
        );




 errno_t __cdecl _wctomb_s_l(
     int* _SizeConverted,
     char* _MbCh,
     size_t _SizeInBytes,
     wchar_t _WCh,
     _locale_t _Locale);


 errno_t __cdecl wcstombs_s(
     size_t* _PtNumOfCharConverted,
     char* _Dst,
     size_t _DstSizeInBytes,
     wchar_t const* _Src,
     size_t _MaxCountInBytes
    );


#line 1015 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "wcstombs_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  size_t __cdecl wcstombs( char *_Dest, wchar_t const* _Source, size_t _MaxCount);
#line 1022 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"

 errno_t __cdecl _wcstombs_s_l(
     size_t* _PtNumOfCharConverted,
     char* _Dst,
     size_t _DstSizeInBytes,
     wchar_t const* _Src,
     size_t _MaxCountInBytes,
     _locale_t _Locale
    );


#line 1041 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wcstombs_s_l" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  size_t __cdecl _wcstombs_l(  char *_Dest,   wchar_t const* _Source,   size_t _MaxCount,   _locale_t _Locale);
#line 1066 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma push_macro("_fullpath")




   char* __cdecl _fullpath(
     char* _Buffer,
     char const* _Path,
     size_t _BufferCount
    );
#line 1077 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma pop_macro("_fullpath")


 errno_t __cdecl _makepath_s(
     char* _Buffer,
     size_t _BufferCount,
     char const* _Drive,
     char const* _Dir,
     char const* _Filename,
     char const* _Ext
    );


#line 1098 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(push)
#line 1099 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(disable: 28719)
#line 1100 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(disable: 28726)
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_makepath_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  void __cdecl _makepath( char *_Buffer, char const* _Drive, char const* _Dir, char const* _Filename, char const* _Ext);
#line 1109 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning(pop)

__declspec(deprecated("This function or variable may be unsafe. Consider using " "_splitpath_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 void __cdecl _splitpath(
     char const* _FullPath,
       char* _Drive,
       char* _Dir,
       char* _Filename,
       char* _Ext
    );


 errno_t __cdecl _splitpath_s(
     char const* _FullPath,
     char* _Drive,
     size_t _DriveCount,
     char* _Dir,
     size_t _DirCount,
     char* _Filename,
     size_t _FilenameCount,
     char* _Ext,
     size_t _ExtCount
    );







 errno_t __cdecl getenv_s(
     size_t* _RequiredCount,
     char* _Buffer,
     rsize_t _BufferCount,
     char const* _VarName
    );






 int* __cdecl __p___argc (void);
 char*** __cdecl __p___argv (void);
 wchar_t*** __cdecl __p___wargv(void);
#line 1165 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
 char*** __cdecl __p__environ (void);
 wchar_t*** __cdecl __p__wenviron(void);
#line 1190 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
      __declspec(deprecated("This function or variable may be unsafe. Consider using " "_dupenv_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
     char* __cdecl getenv(
         char const* _VarName
        );


#line 1207 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"

     errno_t __cdecl _dupenv_s(
           char** _Buffer,
         size_t* _BufferCount,
         char const* _VarName
        );
#line 1218 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
     int __cdecl system(
         char const* _Command
        );
#line 1224 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning (push)
#line 1225 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning (disable:6540)


     int __cdecl _putenv(
         char const* _EnvString
        );


     errno_t __cdecl _putenv_s(
         char const* _Name,
         char const* _Value
        );
#line 1238 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
#pragma warning (pop)

     errno_t __cdecl _searchenv_s(
         char const* _Filename,
         char const* _VarName,
         char* _Buffer,
         size_t _BufferCount
        );


#line 1254 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_searchenv_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  void __cdecl _searchenv(char const* _Filename, char const* _VarName,  char *_Buffer);
#line 1262 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "SetErrorMode" " " "instead. See online help for details."))
     void __cdecl _seterrormode(
         int _Mode
        );

    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "Beep" " " "instead. See online help for details."))
     void __cdecl _beep(
         unsigned _Frequency,
         unsigned _Duration
        );

    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "Sleep" " " "instead. See online help for details."))
     void __cdecl _sleep(
         unsigned long _Duration
        );
#line 1366 "D:/windows kits/10/include/10.0.17134.0/ucrt/stdlib.h"
__pragma(pack(pop))
#line 607 "noconfig.H"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#line 1 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"
#line 13 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"
__pragma(pack(push, 8 ))








struct tm
{
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
};







  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wasctime_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))


 wchar_t* __cdecl _wasctime(
     struct tm const* _Tm
    );



 errno_t __cdecl _wasctime_s(
       wchar_t* _Buffer,
     size_t _SizeInWords,
     struct tm const* _Tm
    );


#line 63 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"


 size_t __cdecl wcsftime(
     wchar_t* _Buffer,
     size_t _SizeInWords,
     wchar_t const* _Format,
     struct tm const* _Tm
    );



 size_t __cdecl _wcsftime_l(
     wchar_t* _Buffer,
     size_t _SizeInWords,
     wchar_t const* _Format,
     struct tm const* _Tm,
     _locale_t _Locale
    );


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wctime32_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 wchar_t* __cdecl _wctime32(
     __time32_t const* _Time
    );


 errno_t __cdecl _wctime32_s(
       wchar_t* _Buffer,
       size_t _SizeInWords,
     __time32_t const* _Time
    );


#line 101 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_wctime64_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 wchar_t* __cdecl _wctime64(
     __time64_t const* _Time
    );


 errno_t __cdecl _wctime64_s(
       wchar_t* _Buffer,
       size_t _SizeInWords,
     __time64_t const* _Time);


#line 120 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"

 errno_t __cdecl _wstrdate_s(
       wchar_t* _Buffer,
     size_t _SizeInWords
    );


#line 131 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wstrdate_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wstrdate( wchar_t *_Buffer);
#line 136 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"

 errno_t __cdecl _wstrtime_s(
       wchar_t* _Buffer,
     size_t _SizeInWords
    );


#line 147 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_wstrtime_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  wchar_t* __cdecl _wstrtime( wchar_t *_Buffer);
#line 160 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"
#pragma warning(push)
#line 161 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"
#pragma warning(disable: 4996)
#line 184 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"

        static __inline wchar_t *  __cdecl  _wctime(
             time_t const* const _Time)
        {
            return _wctime64(_Time);
        }


        static __inline errno_t  __cdecl  _wctime_s(
                 wchar_t* const _Buffer,
             size_t const _SizeInWords,
             time_t const* const _Time
            )
        {
            return _wctime64_s(_Buffer, _SizeInWords, _Time);
        }
#line 203 "D:/windows kits/10/include/10.0.17134.0/ucrt/corecrt_wtime.h"
#pragma warning(pop)




__pragma(pack(pop))
#line 14 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"

__pragma(pack(push, 8 ))








typedef long clock_t;

struct _timespec32
{
    __time32_t tv_sec;
    long tv_nsec;
};

struct _timespec64
{
    __time64_t tv_sec;
    long tv_nsec;
};


    struct timespec
    {
        time_t tv_sec;
        long tv_nsec;
    };
#line 61 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_daylight" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 int* __cdecl __daylight(void);




  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_dstbias" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 long* __cdecl __dstbias(void);




  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_timezone" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 long* __cdecl __timezone(void);




    __declspec(deprecated("This function or variable may be unsafe. Consider using " "_get_tzname" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char** __cdecl __tzname(void);




 errno_t __cdecl _get_daylight(
     int* _Daylight
    );


 errno_t __cdecl _get_dstbias(
     long* _DaylightSavingsBias
    );


 errno_t __cdecl _get_timezone(
     long* _TimeZone
    );


 errno_t __cdecl _get_tzname(
     size_t* _ReturnValue,
     char* _Buffer,
     size_t _SizeInBytes,
     int _Index
    );










  __declspec(deprecated("This function or variable may be unsafe. Consider using " "asctime_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl asctime(
     struct tm const* _Tm
    );




     errno_t __cdecl asctime_s(
           char* _Buffer,
         size_t _SizeInBytes,
         struct tm const* _Tm
        );



#line 137 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"

 clock_t __cdecl clock(void);



  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ctime32_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl _ctime32(
     __time32_t const* _Time
    );


 errno_t __cdecl _ctime32_s(
       char* _Buffer,
     size_t _SizeInBytes,
     __time32_t const* _Time
    );


#line 160 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_ctime64_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 char* __cdecl _ctime64(
     __time64_t const* _Time
    );


 errno_t __cdecl _ctime64_s(
       char* _Buffer,
     size_t _SizeInBytes,
     __time64_t const* _Time
    );


#line 180 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"

 double __cdecl _difftime32(
     __time32_t _Time1,
     __time32_t _Time2
    );


 double __cdecl _difftime64(
     __time64_t _Time1,
     __time64_t _Time2
    );


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_gmtime32_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 struct tm* __cdecl _gmtime32(
     __time32_t const* _Time
    );


 errno_t __cdecl _gmtime32_s(
     struct tm* _Tm,
     __time32_t const* _Time
    );


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_gmtime64_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 struct tm* __cdecl _gmtime64(
     __time64_t const* _Time
    );


 errno_t __cdecl _gmtime64_s(
     struct tm* _Tm,
     __time64_t const* _Time
    );


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_localtime32_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 struct tm* __cdecl _localtime32(
     __time32_t const* _Time
    );


 errno_t __cdecl _localtime32_s(
     struct tm* _Tm,
     __time32_t const* _Time
    );


  __declspec(deprecated("This function or variable may be unsafe. Consider using " "_localtime64_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
 struct tm* __cdecl _localtime64(
     __time64_t const* _Time
    );


 errno_t __cdecl _localtime64_s(
     struct tm* _Tm,
     __time64_t const* _Time
    );


 __time32_t __cdecl _mkgmtime32(
     struct tm* _Tm
    );


 __time64_t __cdecl _mkgmtime64(
     struct tm* _Tm
    );


 __time32_t __cdecl _mktime32(
     struct tm* _Tm
    );


 __time64_t __cdecl _mktime64(
     struct tm* _Tm
    );



 size_t __cdecl strftime(
     char* _Buffer,
     size_t _SizeInBytes,
       char const* _Format,
     struct tm const* _Tm
    );



 size_t __cdecl _strftime_l(
     char* _Buffer,
     size_t _MaxSize,
       char const* _Format,
     struct tm const* _Tm,
     _locale_t _Locale
    );


 errno_t __cdecl _strdate_s(
       char* _Buffer,
     size_t _SizeInBytes
    );


#line 290 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strdate_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _strdate( char *_Buffer);
#line 295 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"

 errno_t __cdecl _strtime_s(
       char* _Buffer,
     size_t _SizeInBytes
    );


#line 306 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
__declspec(deprecated("This function or variable may be unsafe. Consider using " "_strtime_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))  char* __cdecl _strtime( char *_Buffer);
#line 311 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
 __time32_t __cdecl _time32(
     __time32_t* _Time
    );

 __time64_t __cdecl _time64(
     __time64_t* _Time
    );



 int __cdecl _timespec32_get(
     struct _timespec32* _Ts,
     int _Base
    );



 int __cdecl _timespec64_get(
     struct _timespec64* _Ts,
     int _Base
    );










     void __cdecl _tzset(void);


    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "GetLocalTime" " " "instead. See online help for details."))
     unsigned __cdecl _getsystime(
         struct tm* _Tm
        );

    __declspec(deprecated("This function or variable has been superceded by newer library " "or operating system functionality. Consider using " "SetLocalTime" " " "instead. See online help for details."))
     unsigned __cdecl _setsystime(
         struct tm* _Tm,
         unsigned _Milliseconds
        );
#line 475 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
          __declspec(deprecated("This function or variable may be unsafe. Consider using " "ctime_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
        static __inline char*  __cdecl  ctime(
             time_t const* const _Time
            )
        {
#line 480 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(push)
#line 481 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(disable: 4996)
            return _ctime64(_Time);
#line 483 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(pop)
        }


        static __inline double  __cdecl  difftime(
             time_t const _Time1,
             time_t const _Time2
            )
        {
            return _difftime64(_Time1, _Time2);
        }

          __declspec(deprecated("This function or variable may be unsafe. Consider using " "gmtime_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
        static __inline struct tm*  __cdecl  gmtime(
             time_t const* const _Time)
        {
#line 499 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(push)
#line 500 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(disable: 4996)
            return _gmtime64(_Time);
#line 502 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(pop)
        }

        __declspec(deprecated("This function or variable may be unsafe. Consider using " "localtime_s" " instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. " "See online help for details."))
        static __inline struct tm*  __cdecl  localtime(
             time_t const* const _Time
            )
        {
#line 510 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(push)
#line 511 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(disable: 4996)
            return _localtime64(_Time);
#line 513 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
#pragma warning(pop)
        }


        static __inline time_t  __cdecl  _mkgmtime(
             struct tm* const _Tm
            )
        {
            return _mkgmtime64(_Tm);
        }


        static __inline time_t  __cdecl  mktime(
             struct tm* const _Tm
            )
        {
            return _mktime64(_Tm);
        }

        static __inline time_t  __cdecl  time(
             time_t* const _Time
            )
        {
            return _time64(_Time);
        }


        static __inline int  __cdecl  timespec_get(
             struct timespec* const _Ts,
             int const _Base
            )
        {
            return _timespec64_get((struct _timespec64*)_Ts, _Base);
        }



            static __inline errno_t  __cdecl  ctime_s(
                   char* const _Buffer,
                 size_t const _SizeInBytes,
                 time_t const* const _Time
                )
            {
                return _ctime64_s(_Buffer, _SizeInBytes, _Time);
            }


            static __inline errno_t  __cdecl  gmtime_s(
                 struct tm* const _Tm,
                 time_t const* const _Time
                )
            {
                return _gmtime64_s(_Tm, _Time);
            }


            static __inline errno_t  __cdecl  localtime_s(
                 struct tm* const _Tm,
                 time_t const* const _Time
                )
            {
                return _localtime64_s(_Tm, _Time);
            }
#line 601 "D:/windows kits/10/include/10.0.17134.0/ucrt/time.h"
__pragma(pack(pop))
#line 608 "noconfig.H"
#line 1 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/setjmp.h"
#line 21 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/setjmp.h"
__pragma(pack(push, 8 ))
#line 145 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/setjmp.h"
    typedef _JBTYPE jmp_buf[_JBLEN];
#line 157 "D:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/include/setjmp.h"
int __cdecl  _setjmp (
     jmp_buf _Buf
    );







    __declspec(noreturn) void __cdecl longjmp(
         jmp_buf _Buf,
         int _Value
        );



__pragma(pack(pop))
#line 609 "noconfig.H"
#line 48 "system.H"
#line 208 "system.H"
typedef long long expr_t;
typedef unsigned long long uexpr_t;
#line 11 "sample.txt"

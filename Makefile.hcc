SRCS = $(wildcard *.c)
HCC1_OUT1 = $(SRCS:.c=.s)
HCPP_OUT1 = $(SRCS:.c=.i)
HCPP_OUT2 = $(SRCS:.c=.j)
HCC1_OUT2 = $(SRCS:.c=.x)

CPP_FLAG = -Id:/cygwin64/usr/include \
-Id:/cygwin64/lib/gcc/x86_64-pc-cygwin/7.3.0/include \
-D__CYGWIN__ -D__WCHAR_TYPE__="unsigned short int" \
-D__declspec\(a\)= -D__cdecl= -D__inline__=inline -D__extension__= \
-D__attribute__\(a\)= -D__builtin_va_list='char*' \
-D__builtin_stdarg_start=__builtin_va_start -D__asm__\(a\)= \
-D__x86_64__ \
-W 0 -H



HCC1_OPT1 = --generator d:/home/khasegawa/lang/bin/intel.dll \
--generator-option \( --debug \)

HCC1_OPT2 = --generator d:/home/khasegawa/lang/bin/docgen.dll

PROG = hcpp.hcc1.exe
$(PROG):$(HCC1_OUT1)
	gcc -g -o $@ $(HCC1_OUT1)

$(PROG):$(HCPP_OUT1)

DOCLINK_OPT = --exclude-dir d:/cygwin64/usr/include \
--exclude-dir d:/cygwin64/lib/gcc/x86_64-pc-cygwin/7.3.0/include \
--output-flow

DOC = hcpp.tex

$(DOC):$(HCPP_OUT2) $(HCC1_OUT2)
	doclink.exe -o $@ $(HCPP_OUT2) $(HCC1_OUT2) $(DOCLINK_OPT)

$(DOC):$(HCPP_OUT1)

%.i : %.c
	hcpp.exe -o $@ -L $(basename $@).j $< $(CPP_FLAG)

%.s : %.i
	hcc1.exe -o $@ $< $(HCC1_OPT1)

%.x : %.i
	hcc1.exe -o $@ $< $(HCC1_OPT2)

RM = rm -r -f

clean:
	$(RM) *.i *.j *.s *.x *~ *.exe *.stackdump
	$(RM) .vs x64 Debug Release
	$(RM) $(DOC)
	$(RM) *.dvi *.log *.aux

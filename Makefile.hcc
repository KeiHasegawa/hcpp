SRCS = $(wildcard *.c)
HCC1_OUT1 = $(SRCS:.c=.s)
HCPP_OUT1 = $(SRCS:.c=.i)
HCPP_OUT2 = $(SRCS:.c=.j)
HCC1_OUT2 = $(SRCS:.c=.x)

HCPP = hcpp.exe
INCLUDE1 = /usr/include
INCLUDE2 = /usr/lib/gcc/x86_64-pc-cygwin/7.3.0/include
HCPP_FLAG = -I$(INCLUDE1) \
-I$(INCLUDE2) \
-D__CYGWIN__ -D__WCHAR_TYPE__="unsigned short int" \
-D__declspec\(a\)= -D__cdecl= -D__inline__=inline -D__extension__= \
-D__attribute__\(a\)= -D__builtin_va_list='char*' \
-D__builtin_stdarg_start=__builtin_va_start -D__asm__\(a\)= \
-D__x86_64__ \
-W 0 -H

HCC1 = hcc1.exe
INTEL_DLL = d:/home/khasegawa/lang/bin/intel.dll
HCC1_OPT1 = --lang eng --generator $(INTEL_DLL) \
--generator-option \( --debug \)

DOCGEN_DLL = d:/home/khasegawa/lang/bin/docgen.dll
HCC1_OPT2 = --lang eng --generator $(DOCGEN_DLL)

DVI = doc.dvi
DOC = hcpp.tex

$(DVI):$(DOC)
	platex doc.tex

$(DOC):$(HCPP_OUT2) $(HCC1_OUT2)
	doclink.exe -o $@ $(HCPP_OUT2) $(HCC1_OUT2) $(DOCLINK_OPT)

PROG1 = hcpp.hcc1.gcc.exe
$(PROG1):$(HCC1_OUT1)
	gcc -g -o $@ $(HCC1_OUT1)

$(PROG1):$(HCPP_OUT1)

DOCLINK_OPT = --exclude-dir $(INCLUDE1) --exclude-dir $(INCLUDE2)

$(DOC):$(HCPP_OUT1)

%.i : %.c
	$(HCPP) -o $@ -L $(basename $@).j $< $(HCPP_FLAG)

%.j : %.c
	$(HCPP) -o $(basename $@).i -L $@ $< $(HCPP_FLAG)

%.s : %.i
	$(HCC1) -o $@ $< $(HCC1_OPT1)

%.x : %.i
	$(HCC1) -o $@ $< $(HCC1_OPT2)

RM = rm -r -f

clean:
	$(RM) *.i *.j *.s *.x *~ *.exe *.stackdump
	$(RM) .vs x64 Debug Release
	$(RM) $(DOC)
	$(RM) *.dvi *.log *.aux
